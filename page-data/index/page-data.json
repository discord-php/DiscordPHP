{"componentChunkName":"component---src-components-template-js","path":"/","result":{"data":{"staticMethods":{"edges":[{"node":{"id":"3f582c20-7305-563b-ac59-4f9732be48fd","frontmatter":{"title":"Intro"},"html":"<p>DiscordPHP is a wrapper for the Discord REST, WebSocket and Voice APIs. Built on top of <a href=\"https://reactphp.org/\">ReactPHP</a> components. This documentation is based off the latest release.</p>\n<p>This documentation page will be moved to class reference. You can now access it <a href=\"http://discord-php.github.io/DiscordPHP/guide/\">here</a>.</p>\n<h3>Requirements</h3>\n<ul>\n<li>\n<p>PHP 8.0 CLI</p>\n<ul>\n<li>Will not run on a webserver (FPM, CGI), you must run through CLI. A bot is a long-running process.</li>\n<li>x86 (32-bit) PHP requires ext-gmp extension enabled for handling new Permission values.</li>\n</ul>\n</li>\n<li><code class=\"language-text\">ext-json</code> for JSON parsing.</li>\n<li><code class=\"language-text\">ext-zlib</code> for gateway packet compression.</li>\n</ul>\n<h4>Recommended Extensions</h4>\n<ul>\n<li>One of <code class=\"language-text\">ext-uv</code>, <code class=\"language-text\">ext-libev</code> or <code class=\"language-text\">evt-event</code> (in order of preference) for a faster, and more performant event loop.</li>\n<li><code class=\"language-text\">ext-mbstring</code> if you may handle non-english characters.</li>\n<li><code class=\"language-text\">ext-gmp</code> if running 32-bit PHP.</li>\n</ul>\n<h4>Voice Requirements</h4>\n<ul>\n<li>\n<p>x86_64 Windows, Linux or Darwin based OS.</p>\n<ul>\n<li>If you are running on Windows, you must be using PHP 8.0.</li>\n</ul>\n</li>\n<li><code class=\"language-text\">ext-sodium</code> for voice encryption.</li>\n<li>FFmpeg</li>\n</ul>\n<h3>Development Environment Recommendations</h3>\n<p>We recommend using an editor with support for the <a href=\"https://microsoft.github.io/language-server-protocol/\">Language Server Protocol</a>.\nA list of supported editors can be found <a href=\"https://microsoft.github.io/language-server-protocol/implementors/servers/\">here</a>.\nHere are some commonly used editors:</p>\n<ul>\n<li>Visual Studio Code (built-in LSP support)</li>\n<li>Vim/Neovim (with the <a href=\"https://github.com/neoclide/coc.nvim\">coc.nvim</a> plugin for LSP support)</li>\n<li>PHPStorm (built-in PHP support)</li>\n</ul>\n<p>We recommend installing <a href=\"https://intelephense.com/\">PHP Intelephense</a> alongside your LSP-equipped editor for code completion alongside other helpful features. There is no need to pay for the premium features, the free version will suffice.</p>\n<h3>Installation</h3>\n<p>Installation requries <a href=\"https://getcomposer.org\">Composer</a>.</p>\n<p>To install the latest release:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token operator\">></span> <span class=\"token function\">composer</span> require team-reflex/discord-php</code></pre></div>\n<p>If you would like to run on the latest <code class=\"language-text\">master</code> branch:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token operator\">></span> <span class=\"token function\">composer</span> require team-reflex/discord-php dev-master</code></pre></div>\n<p><code class=\"language-text\">master</code> can be substituted for any other branch name to install that branch.</p>\n<h3>Key Tips</h3>\n<p>As Discord is a real-time application, events come frequently and it is vital that your code does not block the ReactPHP event loop.\nMost, if not all, functions return promises, therefore it is vital that you understand the concept of asynchronous programming with promises.\nYou can learn more about ReactPHP promises <a href=\"https://reactphp.org/promise/\">here</a>.</p>\n<h3>Help</h3>\n<p>If you need any help, feel free to join the <a href=\"https://discord.gg/dphp\">PHP Discorders</a> Discord and someone should be able to give you a hand. We are a small community so please be patient if someone can't help you straight away.</p>\n<h3>Contributing</h3>\n<p>All contributions are welcome through pull requests in our GitHub repository. At the moment we would love contributions towards:</p>\n<ul>\n<li>Unit testing</li>\n<li>Documentation</li>\n</ul>","fields":{"idName":"intro","slug":"/00_intro/"}}},{"node":{"id":"8dfe0c56-b553-513f-a518-e2c7ac6ae7b7","frontmatter":{"title":"FAQ"},"html":"<h3><code class=\"language-text\">Class 'X' not found</code></h3>\n<p>You most likely haven't imported the class that you are trying to use. Please check the <a href=\"http://discord-php.github.io/DiscordPHP/guide/\">class reference</a> and search for the class that you are trying to use. Add an import statement at the top of the file like shown on the right.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">Discord<span class=\"token punctuation\">\\</span>X</span><span class=\"token punctuation\">;</span></span></code></pre></div>\n<p>If you don't want to have to import a class every time, you should look into the PHP Intelephense language server (written above) which will do automatic imports for you.</p>\n<h3>There are less members and/or users than expected</h3>\n<p>Server members are guarded by a priviliged server intent which must be enabled in the <a href=\"https://discord.com/developers/applications\">Discord Developer Portal</a>. Note that you will need to verify your bot if you use this intent and pass 100 guilds.</p>\n<p>You also need to enable the <code class=\"language-text\">loadAllMembers</code> option in your code, as shown on the right.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Discord</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token string single-quoted-string\">'token'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'...'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'loadAllMembers'</span> <span class=\"token operator\">=></span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Enable this option</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>If you are using DiscordPHP Version 6 or greater, you need to enable the <code class=\"language-text\">GUILD_MEMBERS</code> intent as well as the <code class=\"language-text\">loadAllMembers</code> option. The shown code will enable all intents minus the <code class=\"language-text\">GUILD_PRESENCES</code> intent (which is also priviliged).</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Discord</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token string single-quoted-string\">'token'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'...'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'loadAllMembers'</span> <span class=\"token operator\">=></span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'intents'</span> <span class=\"token operator\">=></span> <span class=\"token class-name static-context\">Intents</span><span class=\"token operator\">::</span><span class=\"token function\">getDefaultIntents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token class-name\">Intents</span><span class=\"token operator\">::</span><span class=\"token constant\">GUILD_MEMBERS</span> <span class=\"token comment\">// Enable the `GUILD_MEMBERS` intent</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>","fields":{"idName":"faq","slug":"/01_faq/"}}},{"node":{"id":"18f3afa9-48fd-5528-8b06-3c965a5f57e7","frontmatter":{"title":"Basics"},"html":"<p>First step is to include the Composer autoload file and <a href=\"https://www.php.net/manual/en/language.namespaces.importing.php\">import</a> any required classes.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">Discord<span class=\"token punctuation\">\\</span>Discord</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Discord<span class=\"token punctuation\">\\</span>WebSockets<span class=\"token punctuation\">\\</span>Intents</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Discord<span class=\"token punctuation\">\\</span>WebSockets<span class=\"token punctuation\">\\</span>Event</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">include</span> <span class=\"token constant\">__DIR__</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'/vendor/autoload.php'</span><span class=\"token punctuation\">;</span></span></code></pre></div>\n<br>\n<p>The Discord instance can be set up with an array of options. All are optional except for token:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Discord</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span></code></pre></div>\n<p><code class=\"language-text\">token</code> is your Discord token. <strong>Required</strong>.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\">    <span class=\"token string single-quoted-string\">'token'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'Your-Token-Here'</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p><code class=\"language-text\">intents</code> can be an array of valid intents <em>or</em> an integer representing the intents. Default is all intents minus any privileged intents.\nAt the moment this means all intents minus <code class=\"language-text\">GUILD_MEMBERS</code>, <code class=\"language-text\">GUILD_PRESENCES</code>, and <code class=\"language-text\">MESSAGE_CONTENT</code>. To enable these intents you must first enable them in your\nDiscord developer portal.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\">    <span class=\"token string single-quoted-string\">'intents'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n        <span class=\"token class-name static-context\">Intents</span><span class=\"token operator\">::</span><span class=\"token constant\">GUILDS</span><span class=\"token punctuation\">,</span> <span class=\"token class-name static-context\">Intents</span><span class=\"token operator\">::</span><span class=\"token constant\">GUILD_BANS</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// or</span>\n    <span class=\"token string single-quoted-string\">'intents'</span> <span class=\"token operator\">=></span> <span class=\"token number\">12345</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// or</span>\n    <span class=\"token string single-quoted-string\">'intents'</span> <span class=\"token operator\">=></span> <span class=\"token class-name static-context\">Intents</span><span class=\"token operator\">::</span><span class=\"token function\">getDefaultIntents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token class-name\">Intents</span><span class=\"token operator\">::</span><span class=\"token constant\">GUILD_MEMBERS</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// default intents as well as guild members</span></code></pre></div>\n<p><code class=\"language-text\">loadAllMembers</code> is a boolean whether all members should be fetched and stored on bot start.\nLoading members takes a while to retrieve from Discord and store, so default is false.\nThis requires the <code class=\"language-text\">GUILD_MEMBERS</code> intent to be enabled in DiscordPHP. See above for more details.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\">    <span class=\"token string single-quoted-string\">'loadAllMembers'</span> <span class=\"token operator\">=></span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p><code class=\"language-text\">storeMessages</code> is a boolean whether messages received and sent should be stored. Default is false.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\">    <span class=\"token string single-quoted-string\">'storeMessages'</span> <span class=\"token operator\">=></span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p><code class=\"language-text\">retrieveBans</code> is a boolean whether bans should be retrieved on bot load. Default is false.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\">    <span class=\"token string single-quoted-string\">'retrieveBans'</span> <span class=\"token operator\">=></span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p><code class=\"language-text\">disabledEvents</code> is an array of events that will be disabled. By default all events are enabled.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\">    <span class=\"token string single-quoted-string\">'disabledEvents'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n        <span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">MESSAGE_CREATE</span><span class=\"token punctuation\">,</span> <span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">MESSAGE_DELETE</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p><code class=\"language-text\">loop</code> is an instance of a ReactPHP event loop that can be provided to the client rather than creating a new loop.\nUseful if you want to use other React components. By default, a new loop is created.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\">    <span class=\"token string single-quoted-string\">'loop'</span> <span class=\"token operator\">=></span> <span class=\"token class-name class-name-fully-qualified static-context\"><span class=\"token punctuation\">\\</span>React<span class=\"token punctuation\">\\</span>EventLoop<span class=\"token punctuation\">\\</span>Factory</span><span class=\"token operator\">::</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p><code class=\"language-text\">logger</code> is an instance of a logger that implements <code class=\"language-text\">LoggerInterface</code>. By default, a new Monolog logger with log level DEBUG is created to print to stdout.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\">    <span class=\"token string single-quoted-string\">'logger'</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\"><span class=\"token punctuation\">\\</span>Monolog<span class=\"token punctuation\">\\</span>Logger</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'New logger'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p><code class=\"language-text\">dnsConfig</code> is an instace of <code class=\"language-text\">Config</code> or a string of name server address. By default system setting is used and fall back to 8.8.8.8 when system configuration is not found. Currently only used for VoiceClient.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\">    <span class=\"token string single-quoted-string\">'dnsConfig'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'1.1.1.1'</span><span class=\"token punctuation\">,</span></code></pre></div>\n<hr>\n<p>The following options should only be used by large bots that require sharding. If you plan to use sharding, <a href=\"https://discord.com/developers/docs/topics/gateway#sharding\">read up</a> on how Discord implements it.</p>\n<p><code class=\"language-text\">shardId</code> is the ID of the bot shard.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\">    <span class=\"token string single-quoted-string\">'shardId'</span> <span class=\"token operator\">=></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p><code class=\"language-text\">shardCount</code> is the number of shards that you are using.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\">    <span class=\"token string single-quoted-string\">'shardCount'</span> <span class=\"token operator\">=></span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">]);</code></pre></div>\n<hr>\n<p>Gateway events should be registered inside the <code class=\"language-text\">ready</code> event, which is emitted once when the bot first starts and has connected to the gateway.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'ready'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></code></pre></div>\n<p>To register an event we use the <code class=\"language-text\">$discord->on(...)</code> function, which registers a handler.\nA list of events is available <a href=\"https://github.com/discord-php/DiscordPHP/blob/master/src/Discord/WebSockets/Event.php#L30-L75\">here</a>. They are described in more detail in further sections of the documentation.\nAll events take a callback which is called when the event is triggered, and the callback is called with an object representing the content of the event and an instance of the <code class=\"language-text\">Discord</code> client.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\">    <span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">MESSAGE_CREATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Message</span> <span class=\"token variable\">$message</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// ... handle message sent</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">});</code></pre></div>\n<br>\n<p>Finally, the event loop needs to be started. Treat this as an infinite loop.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div>\nIf you want to stop the bot you can run:\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>If you want to stop the bot without stopping the event loop, the close function takes a boolean:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token constant boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</div>","fields":{"idName":"basics","slug":"/02_basics/"}}},{"node":{"id":"cdf1571b-195f-5875-80fb-1811e6f36b64","frontmatter":{"title":"Events"},"html":"<p>Events are payloads sent over the socket to a client that correspond to events in Discord.</p>\n<p>All gateway events are enabled by default and can be individually disabled using <code class=\"language-text\">disabledEvents</code> options.\nMost events also requires the respective Intents enabled (as well privileged ones enabled from <a href=\"https://discord.com/developers/applications\">Developers Portal</a>) regardless the enabled event setting.</p>\n<p>To listen on gateway events, use the event emitter callback and <code class=\"language-text\">Event</code> name constants.\nSome events are internally handled by the library and may not be registered a listener:</p>\n<ul>\n<li><code class=\"language-text\">Event::READY</code></li>\n<li><code class=\"language-text\">Event::RESUMED</code></li>\n<li><code class=\"language-text\">Event::GUILD_MEMBERS_CHUNK</code></li>\n</ul>\n<p>If you are an advanced user, you may listen to those events before internally handled with the library by parsing the 'raw' dispatch event data.</p>","fields":{"idName":"events","slug":"/03_events/00_events/"}}},{"node":{"id":"9ca0f73e-8219-50bd-b75f-8954614ec795","frontmatter":{"title":"Application Commands"},"html":"<h3>Application Command Permissions Update</h3>\n<p>Called with an <code class=\"language-text\">CommandPermissions</code> object when an application command's permissions are updated.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">APPLICATION_COMMAND_PERMISSIONS_UPDATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">CommandPermissions</span> <span class=\"token variable\">$commandPermission</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span><span class=\"token class-name type-declaration\">CommandPermissions</span> <span class=\"token variable\">$oldCommandPermission</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","fields":{"idName":"application-commands","slug":"/03_events/01_application_commands/"}}},{"node":{"id":"8c392655-a770-5f45-b162-a572adf7dfc6","frontmatter":{"title":"Auto Moderations"},"html":"<p>All auto moderation related events are currently only sent to bot users which have the <code class=\"language-text\">MANAGE_GUILD</code> permission.</p>\n<h3>Auto Moderation Rule Create</h3>\n<p>Called with a <code class=\"language-text\">Rule</code> object when an auto moderation rule is created.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">AUTO_MODERATION_RULE_CREATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Rule</span> <span class=\"token variable\">$rule</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Requires the <code class=\"language-text\">Intents::AUTO_MODERATION_CONFIGURATION</code> intent.</p>\n<h3>Auto Moderation Rule Update</h3>\n<p>Called with a <code class=\"language-text\">Rule</code> object when an auto moderation rule is updated.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">AUTO_MODERATION_RULE_UPDATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Rule</span> <span class=\"token variable\">$rule</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span><span class=\"token class-name type-declaration\">Rule</span> <span class=\"token variable\">$oldRule</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Auto Moderation Rule Delete</h3>\n<p>Called with a <code class=\"language-text\">Rule</code> object when an auto moderation rule is deleted.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">AUTO_MODERATION_RULE_DELETE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Rule</span> <span class=\"token variable\">$rule</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Requires the <code class=\"language-text\">Intents::AUTO_MODERATION_CONFIGURATION</code> intent.</p>\n<h3>Auto Moderation Action Execution</h3>\n<p>Called with an <code class=\"language-text\">AutoModerationActionExecution</code> object when an auto moderation rule is triggered and an action is executed (e.g. when a message is blocked).</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token comment\">// use `Discord\\Parts\\WebSockets\\AutoModerationActionExecution`;</span>\n\n<span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">AUTO_MODERATION_ACTION_EXECUTION</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">AutoModerationActionExecution</span> <span class=\"token variable\">$actionExecution</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Requires the <code class=\"language-text\">Intents::AUTO_MODERATION_EXECUTION</code> intent.</p>","fields":{"idName":"auto-moderations","slug":"/03_events/02_auto_moderations/"}}},{"node":{"id":"16ca7174-5bd0-5ac0-8120-cd41556b62db","frontmatter":{"title":"Channels"},"html":"<p>Requires the <code class=\"language-text\">Intents::GUILDS</code> intent.</p>\n<h3>Channel Create</h3>\n<p>Called with a <code class=\"language-text\">Channel</code> object when a new channel is created, relevant to the Bot.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">CHANNEL_CREATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Channel</span> <span class=\"token variable\">$channel</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Channel Update</h3>\n<p>Called with two <code class=\"language-text\">Channel</code> objects when a channel is updated.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">CHANNEL_UPDATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Channel</span> <span class=\"token variable\">$channel</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span><span class=\"token class-name type-declaration\">Channel</span> <span class=\"token variable\">$oldChannel</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Channel Delete</h3>\n<p>Called with a <code class=\"language-text\">Channel</code> object when a channel relevant to the Bot is deleted.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">CHANNEL_DELETE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Channel</span> <span class=\"token variable\">$channel</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Channel Pins Update</h3>\n<p>Called with an object when a message is pinned or unpinned in a text channel. This is not sent when a pinned message is deleted.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">CHANNEL_PINS_UPDATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$pins</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// {</span>\n    <span class=\"token comment\">//     \"guild_id\": \"\",</span>\n    <span class=\"token comment\">//     \"channel_id\": \"\",</span>\n    <span class=\"token comment\">//     \"last_pin_timestamp\": \"\"</span>\n    <span class=\"token comment\">// }</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>For direct messages, it only requires the <code class=\"language-text\">Intents::DIRECT_MESSAGES</code> intent.</p>\n</blockquote>\n<h2>Threads</h2>\n<p>Requires the <code class=\"language-text\">Intents::GUILDS</code> intent.</p>\n<h3>Thread Create</h3>\n<p>Called with a <code class=\"language-text\">Thread</code> object when a thread is created, relevant to the Bot.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">THREAD_CREATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Thread</span> <span class=\"token variable\">$thread</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Thread Update</h3>\n<p>Called with a <code class=\"language-text\">Thread</code> object when a thread is updated.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">THREAD_UPDATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Thread</span> <span class=\"token variable\">$thread</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span><span class=\"token class-name type-declaration\">Thread</span> <span class=\"token variable\">$oldThread</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Thread Delete</h3>\n<p>Called with an old <code class=\"language-text\">Thread</code> object when a thread relevant to the Bot is deleted.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">THREAD_DELETE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-hint\">object</span> <span class=\"token variable\">$thread</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$thread</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// $thread was cached</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// $thread was not in cache:</span>\n    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// {</span>\n    <span class=\"token comment\">//     \"type\": 0,</span>\n    <span class=\"token comment\">//     \"id\": \"\",</span>\n    <span class=\"token comment\">//     \"guild_id\": \"\",</span>\n    <span class=\"token comment\">//     \"parent_id\": \"\"</span>\n    <span class=\"token comment\">// }</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Thread List Sync</h3>\n<p>Called when list of threads are synced.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">THREAD_LIST_SYNC</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Collection</span> <span class=\"token variable\">$threads</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Thread Member Update</h3>\n<p>Called with a Thread <code class=\"language-text\">Member</code> object when the thread member for the current Bot is updated.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token comment\">// use Discord\\Parts\\Thread\\Member;</span>\n\n<span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">THREAD_MEMBER_UPDATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Member</span> <span class=\"token variable\">$threadMember</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Thread Members Update</h3>\n<p>Called with a <code class=\"language-text\">Thread</code> object when anyone is added to or removed from a thread. If the Bot does not have the <code class=\"language-text\">Intents::GUILD_MEMBERS</code>, then this event will only be called if the Bot was added to or removed from the thread.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">THREAD_MEMBERS_UPDATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Thread</span> <span class=\"token variable\">$thread</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","fields":{"idName":"channels","slug":"/03_events/03_channels/"}}},{"node":{"id":"db6c3e63-13ef-5840-9346-39c3de7b7512","frontmatter":{"title":"Guilds"},"html":"<p>Requires the <code class=\"language-text\">Intents::GUILDS</code> intent.</p>\n<h3>Guild Create</h3>\n<p>Called with a <code class=\"language-text\">Guild</code> object in one of the following situations:</p>\n<ol>\n<li>When the Bot is first starting and the guilds are becoming available. (unless the listener is put inside after 'ready' event)</li>\n<li>When a guild was unavailable and is now available due to an outage.</li>\n<li>When the Bot joins a new guild.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">GUILD_CREATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-hint\">object</span> <span class=\"token variable\">$guild</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$guild</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Guild</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// the guild is unavailable due to an outage, $guild is a stdClass</span>\n        <span class=\"token comment\">// {</span>\n        <span class=\"token comment\">//     \"id\": \"\",</span>\n        <span class=\"token comment\">//     \"unavailable\": true,</span>\n        <span class=\"token comment\">// }</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// the Bot has joined the guild</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Guild Update</h3>\n<p>Called with two <code class=\"language-text\">Guild</code> objects when a guild is updated.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">GUILD_UPDATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Guild</span> <span class=\"token variable\">$guild</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span><span class=\"token class-name type-declaration\">Guild</span> <span class=\"token variable\">$oldGuild</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Guild Delete</h3>\n<p>Called with a <code class=\"language-text\">Guild</code> object in one of the following situations:</p>\n<ol>\n<li>The Bot was removed from a guild.</li>\n<li>The guild is unavailable due to an outage.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">GUILD_DELETE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-hint\">object</span> <span class=\"token variable\">$guild</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">bool</span> <span class=\"token variable\">$unavailable</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$unavailable</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// the guild is unavailabe due to an outage, $guild is a stdClass</span>\n        <span class=\"token comment\">// {</span>\n        <span class=\"token comment\">//     \"guild_id\": \"\",</span>\n        <span class=\"token comment\">//     \"unavailable\": \"\",</span>\n        <span class=\"token comment\">// }</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// the Bot has been kicked from the guild</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Guild Moderation</h2>\n<p>Requires the <code class=\"language-text\">Intents::GUILD_MODERATION</code> intent and <code class=\"language-text\">ban_members</code> or <code class=\"language-text\">view_audit_log</code> permission.</p>\n<h3>Guild Audit Log Entry Create</h3>\n<p>Called with an <code class=\"language-text\">Audit Log Entry</code> object when an audit log entry is created. Requires the <code class=\"language-text\">view_audit_log</code> permission.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">GUILD_AUDIT_LOG_ENTRY_CREATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Entry</span> <span class=\"token variable\">$entry</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Guild Ban Add</h3>\n<p>Called with a <code class=\"language-text\">Ban</code> object when a member is banned from a guild. Requires the <code class=\"language-text\">ban_members</code> permission.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">GUILD_BAN_ADD</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Ban</span> <span class=\"token variable\">$ban</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Guild Ban Remove</h3>\n<p>Called with a <code class=\"language-text\">Ban</code> object when a user is unbanned from a guild. Requires the <code class=\"language-text\">ban_members</code> permission.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">GUILD_BAN_REMOVE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Ban</span> <span class=\"token variable\">$ban</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Guild Emojis and Stickers</h2>\n<p>Requires the <code class=\"language-text\">Intents::GUILD_EMOJIS_AND_STICKERS</code> intent.</p>\n<h3>Guild Emojis Update</h3>\n<p>Called with two Collections of <code class=\"language-text\">Emoji</code> objects when a guild's emojis have been added/updated/deleted. <code class=\"language-text\">$oldEmojis</code> <em>may</em> be empty if it was not cached or there were previously no emojis.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">GUILD_EMOJIS_UPDATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Collection</span> <span class=\"token variable\">$emojis</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Collection</span> <span class=\"token variable\">$oldEmojis</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Guild Stickers Update</h3>\n<p>Called with two Collections of <code class=\"language-text\">Sticker</code> objects when a guild's stickers have been added/updated/deleted. <code class=\"language-text\">$oldStickers</code> <em>may</em> be empty if it was not cached or there were previously no stickers.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">GUILD_STICKERS_UPDATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Collection</span> <span class=\"token variable\">$stickers</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Collection</span> <span class=\"token variable\">$oldStickers</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Guild Members</h2>\n<p>Requires the <code class=\"language-text\">Intents::GUILD_MEMBERS</code> intent. This intent is a priviliged intent, it must be enabled in your Discord Bot developer settings.</p>\n<h3>Guild Member Add</h3>\n<p>Called with a <code class=\"language-text\">Member</code> object when a new user joins a guild.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">GUILD_MEMBER_ADD</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Member</span> <span class=\"token variable\">$member</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Guild Member Remove</h3>\n<p>Called with a <code class=\"language-text\">Member</code> object when a member is removed from a guild (leave/kick/ban). Note that the member <em>may</em> only have <code class=\"language-text\">User</code> data if <code class=\"language-text\">loadAllMembers</code> is disabled.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">GUILD_MEMBER_REMOVE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Member</span> <span class=\"token variable\">$member</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Guild Member Update</h3>\n<p>Called with two <code class=\"language-text\">Member</code> objects when a member is updated in a guild. Note that the old member <em>may</em> be <code class=\"language-text\">null</code> if <code class=\"language-text\">loadAllMembers</code> is disabled.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">GUILD_MEMBER_UPDATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Member</span> <span class=\"token variable\">$member</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span><span class=\"token class-name type-declaration\">Member</span> <span class=\"token variable\">$oldMember</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Guild Roles</h2>\n<p>Requires the <code class=\"language-text\">Intents::GUILDS</code> intent.</p>\n<h3>Guild Role Create</h3>\n<p>Called with a <code class=\"language-text\">Role</code> object when a role is created in a guild.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">GUILD_ROLE_CREATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Role</span> <span class=\"token variable\">$role</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Guild Role Update</h3>\n<p>Called with two <code class=\"language-text\">Role</code> objects when a role is updated in a guild.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">GUILD_ROLE_UPDATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Role</span> <span class=\"token variable\">$role</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span><span class=\"token class-name type-declaration\">Role</span> <span class=\"token variable\">$oldRole</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Guild Role Delete</h3>\n<p>Called with a <code class=\"language-text\">Role</code> object when a role is deleted in a guild. <code class=\"language-text\">$role</code> may return <code class=\"language-text\">Role</code> object if it was cached.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">GUILD_ROLE_DELETE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-hint\">object</span> <span class=\"token variable\">$role</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$role</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Role</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// $role was cached</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// $role was not in cache:</span>\n    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// {</span>\n        <span class=\"token comment\">//     \"guild_id\": \"\" // role guild ID</span>\n        <span class=\"token comment\">//     \"role_id\": \"\", // role ID,</span>\n        <span class=\"token comment\">// }</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Guild Scheduled Events</h2>\n<p>Requires the <code class=\"language-text\">Intents::GUILD_SCHEDULED_EVENTS</code> intent.</p>\n<h3>Guild Scheduled Event Create</h3>\n<p>Called with a <code class=\"language-text\">ScheduledEvent</code> object when a scheduled event is created in a guild.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">GUILD_SCHEDULED_EVENT_CREATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">ScheduledEvent</span> <span class=\"token variable\">$scheduledEvent</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Guild Scheduled Event Update</h3>\n<p>Called with a <code class=\"language-text\">ScheduledEvent</code> object when a scheduled event is updated in a guild.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">GUILD_SCHEDULED_EVENT_UPDATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">ScheduledEvent</span> <span class=\"token variable\">$scheduledEvent</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span><span class=\"token class-name type-declaration\">ScheduledEvent</span> <span class=\"token variable\">$oldScheduledEvent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Guild Scheduled Event Delete</h3>\n<p>Called with a <code class=\"language-text\">ScheduledEvent</code> object when a scheduled event is deleted in a guild.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">GUILD_SCHEDULED_EVENT_DELETE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">ScheduledEvent</span> <span class=\"token variable\">$scheduledEvent</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Guild Scheduled Event User Add</h3>\n<p>Called when a user has subscribed to a scheduled event in a guild.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">GUILD_SCHEDULED_EVENT_USER_ADD</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Guild Scheduled Event User Remove</h3>\n<p>Called when a user has unsubscribed from a scheduled event in a guild.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">GUILD_SCHEDULED_EVENT_USER_REMOVE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Integrations</h2>\n<p>Requires the <code class=\"language-text\">Intents::GUILD_INTEGRATIONS</code> intent.</p>\n<h3>Guild Integrations Update</h3>\n<p>Called with a cached <code class=\"language-text\">Guild</code> object when a guild integration is updated.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">GUILD_INTEGRATIONS_UPDATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-hint\">object</span> <span class=\"token variable\">$guild</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$guild</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Guild</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// $guild was cached</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// $guild was not in cache:</span>\n    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// {</span>\n        <span class=\"token comment\">//     \"guild_id\": \"\",</span>\n        <span class=\"token comment\">// }</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Integration Create</h3>\n<p>Called with an <code class=\"language-text\">Integration</code> object when an integration is created in a guild.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">INTEGRATION_CREATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Integration</span> <span class=\"token variable\">$integration</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Integration Update</h3>\n<p>Called with an <code class=\"language-text\">Integration</code> object when a integration is updated in a guild.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">INTEGRATION_UPDATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Integration</span> <span class=\"token variable\">$integration</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span><span class=\"token class-name type-declaration\">Integration</span> <span class=\"token variable\">$oldIntegration</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Integration Delete</h3>\n<p>Called with an old <code class=\"language-text\">Integration</code> object when a integration is deleted from a guild.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">INTEGRATION_DELETE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-hint\">object</span> <span class=\"token variable\">$integration</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$integration</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Integration</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// $integration was cached</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// $integration was not in cache:</span>\n    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// {</span>\n        <span class=\"token comment\">//     \"id\": \"\",</span>\n        <span class=\"token comment\">//     \"guild_id\": \"\",</span>\n        <span class=\"token comment\">//     \"application_id\": \"\"</span>\n        <span class=\"token comment\">// }</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","fields":{"idName":"guilds","slug":"/03_events/04_guilds/"}}},{"node":{"id":"4add7942-48e4-55a2-9f41-d3a36282a4bc","frontmatter":{"title":"Invites"},"html":"<p>Requires the <code class=\"language-text\">Intents::GUILD_INVITES</code> intent and <code class=\"language-text\">manage_channels</code> permission.</p>\n<h3>Invite Create</h3>\n<p>Called with an <code class=\"language-text\">Invite</code> object when a new invite to a channel is created.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">INVITE_CREATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Invite</span> <span class=\"token variable\">$invite</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Invite Delete</h3>\n<p>Called with an object when an invite is created.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">INVITE_DELETE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-hint\">object</span> <span class=\"token variable\">$invite</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$invite</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Invite</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// $invite was cached</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// If $invite was not in cache:</span>\n    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// {</span>\n        <span class=\"token comment\">//     \"channel_id\": \"\",</span>\n        <span class=\"token comment\">//     \"guild_id\": \"\",</span>\n        <span class=\"token comment\">//     \"code\": \"\" // the unique invite code</span>\n        <span class=\"token comment\">// }</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","fields":{"idName":"invites","slug":"/03_events/05_invites/"}}},{"node":{"id":"084dbeb6-9f3e-51d6-a1bc-8a80b5f53f96","frontmatter":{"title":"Interactions"},"html":"<h3>Interaction Create</h3>\n<p>Called with an <code class=\"language-text\">Interaction</code> object when an interaction is created.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token comment\">// use Discord\\Parts\\Interactions\\Interaction;</span>\n\n<span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">INTERACTION_CREATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Interaction</span> <span class=\"token variable\">$interaction</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Application Command &#x26; Message component listeners are processed before this event is called.\nUseful if you want to create a customized callback or have interaction response persists after Bot restart.</p>","fields":{"idName":"interactions","slug":"/03_events/06_interactions/"}}},{"node":{"id":"f464c05b-7386-5a5e-ae69-abca58ab34b6","frontmatter":{"title":"Messages"},"html":"<blockquote>\n<p>Unlike persistent messages, ephemeral messages are sent directly to the user and the Bot who sent the message rather than through the guild channel. Because of this, ephemeral messages are tied to the <code class=\"language-text\">Intents::DIRECT_MESSAGES</code>, and the message object won't include <code class=\"language-text\">guild_id</code> or <code class=\"language-text\">member</code>.</p>\n</blockquote>\n<p>Requires the <code class=\"language-text\">Intents::GUILD_MESSAGES</code> intent for guild or <code class=\"language-text\">Intents::DIRECT_MESSAGES</code> for direct messages.</p>\n<h3>Message Create</h3>\n<p>Called with a <code class=\"language-text\">Message</code> object when a message is sent in a guild or private channel.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">MESSAGE_CREATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Message</span> <span class=\"token variable\">$message</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Message Update</h3>\n<p>Called with <code class=\"language-text\">Message</code> or <code class=\"language-text\">stdClass</code> objects when a message is updated in a guild or private channel.\nThe <code class=\"language-text\">$message</code> may be an instance of <code class=\"language-text\">stdClass</code> if it was partial, otherwise a <code class=\"language-text\">Message</code>.\nThe old message may be null if <code class=\"language-text\">storeMessages</code> is not enabled <em>or</em> the message was sent before the Bot was started.\nDiscord does not provide a way to get message update history.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">MESSAGE_UPDATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-hint\">object</span> <span class=\"token variable\">$message</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span><span class=\"token class-name type-declaration\">Message</span> <span class=\"token variable\">$oldMessage</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$message</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// Check for non partial message</span>\n        <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Message Delete</h3>\n<p>Called with an old <code class=\"language-text\">Message</code> object <em>or</em> the raw payload when a message is deleted.\nThe <code class=\"language-text\">Message</code> object may be the raw payload if <code class=\"language-text\">storeMessages</code> is not enabled <em>or</em> the message was sent before the Bot was started.\nDiscord does not provide a way to get deleted messages.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">MESSAGE_DELETE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-hint\">object</span> <span class=\"token variable\">$message</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$message</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// $message was cached</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// $message was not in cache:</span>\n    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// {</span>\n        <span class=\"token comment\">//     \"id\": \"\", // deleted message ID,</span>\n        <span class=\"token comment\">//     \"channel_id\": \"\", // message channel ID,</span>\n        <span class=\"token comment\">//     \"guild_id\": \"\" // channel guild ID</span>\n        <span class=\"token comment\">// }</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Message Delete Bulk</h3>\n<p>Called with a <code class=\"language-text\">Collection</code> of old <code class=\"language-text\">Message</code> objects <em>or</em> the raw payload when bulk messages are deleted.\nThe <code class=\"language-text\">Message</code> object may be the raw payload if <code class=\"language-text\">storeMessages</code> is not enabled <em>or</em> the message was sent before the Bot was started.\nDiscord does not provide a way to get deleted messages.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">MESSAGE_DELETE_BULK</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Collection</span> <span class=\"token variable\">$messages</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$messages</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$message</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// $message was cached</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// $message was not in cache:</span>\n        <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// {</span>\n            <span class=\"token comment\">//     \"id\": \"\", // deleted message ID,</span>\n            <span class=\"token comment\">//     \"channel_id\": \"\", // message channel ID,</span>\n            <span class=\"token comment\">//     \"guild_id\": \"\" // channel guild ID</span>\n            <span class=\"token comment\">// }</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Message Reactions</h2>\n<p>Requires the <code class=\"language-text\">Intents::GUILD_MESSAGE_REACTIONS</code> intent for guild or <code class=\"language-text\">Intents::DIRECT_MESSAGE_REACTIONS</code> for direct messages.</p>\n<h3>Message Reaction Add</h3>\n<p>Called with a <code class=\"language-text\">MessageReaction</code> object when a user added a reaction to a message.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">MESSAGE_REACTION_ADD</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">MessageReaction</span> <span class=\"token variable\">$reaction</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Message Reaction Remove</h3>\n<p>Called with a <code class=\"language-text\">MessageReaction</code> object when a user removes a reaction from a message.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">MESSAGE_REACTION_REMOVE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">MessageReaction</span> <span class=\"token variable\">$reaction</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Message Reaction Remove All</h3>\n<p>Called with a <code class=\"language-text\">MessageReaction</code> object when all reactions are removed from a message.\nNote that only the fields relating to the message, channel and guild will be filled.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">MESSAGE_REACTION_REMOVE_ALL</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">MessageReaction</span> <span class=\"token variable\">$reaction</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Message Reaction Remove Emoji</h3>\n<p>Called with an object when all reactions of an emoji are removed from a message.\nUnlike Message Reaction Remove, this event contains no users or members.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">MESSAGE_REACTION_REMOVE_EMOJI</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">MessageReaction</span> <span class=\"token variable\">$reaction</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","fields":{"idName":"messages","slug":"/03_events/07_messages/"}}},{"node":{"id":"bcd30581-ac4a-5b62-926a-c3cb227d0858","frontmatter":{"title":"Presences"},"html":"<h3>Presence Update</h3>\n<p>Called with a <code class=\"language-text\">PresenceUpdate</code> object when a member's presence is updated.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">PRESENCE_UPDATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">PresenceUpdate</span> <span class=\"token variable\">$presence</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Requires the <code class=\"language-text\">Intents::GUILD_PRESENCES</code> intent. This intent is a priviliged intent, it must be enabled in your Discord Bot developer settings.</p>\n<h3>Typing Start</h3>\n<p>Called with a <code class=\"language-text\">TypingStart</code> object when a user starts typing in a channel.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token comment\">// use Discord\\Parts\\WebSockets\\TypingStart;</span>\n\n<span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">TYPING_START</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">TypingStart</span> <span class=\"token variable\">$typing</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Requires the <code class=\"language-text\">Intents::GUILD_MESSAGE_TYPING</code> intent.</p>\n<h3>User Update</h3>\n<p>Called with a <code class=\"language-text\">User</code> object when the Bot's user properties change.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">USER_UPDATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">User</span> <span class=\"token variable\">$user</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span><span class=\"token class-name type-declaration\">User</span> <span class=\"token variable\">$oldUser</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","fields":{"idName":"presences","slug":"/03_events/08_presences/"}}},{"node":{"id":"edefb427-96a4-58a7-a799-bc15dd61e2c0","frontmatter":{"title":"Stage Instances"},"html":"<p>Requires the <code class=\"language-text\">Intents::GUILDS</code> intent.</p>\n<h3>Stage Instance Create</h3>\n<p>Called with a <code class=\"language-text\">StageInstance</code> object when a stage instance is created (i.e. the Stage is now \"live\").</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">STAGE_INSTANCE_CREATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">StageInstance</span> <span class=\"token variable\">$stageInstance</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Stage Instance Update</h3>\n<p>Called with a <code class=\"language-text\">StageInstance</code> objects when a stage instance has been updated.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">STAGE_INSTANCE_UPDATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">StageInstance</span> <span class=\"token variable\">$stageInstance</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span><span class=\"token class-name type-declaration\">StageInstance</span> <span class=\"token variable\">$oldStageInstance</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Stage Instance Delete</h3>\n<p>Called with a <code class=\"language-text\">StageInstance</code> object when a stage instance has been deleted (i.e. the Stage has been closed).</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">STAGE_INSTANCE_DELETE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">StageInstance</span> <span class=\"token variable\">$stageInstance</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","fields":{"idName":"stage-instances","slug":"/03_events/09_stage_instances/"}}},{"node":{"id":"e7c47e90-d156-5791-a314-719df7d0dd91","frontmatter":{"title":"Voices"},"html":"<h3>Voice State Update</h3>\n<p>Called with a <code class=\"language-text\">VoiceStateUpdate</code> object when a member joins, leaves or moves between voice channels.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token comment\">// use Discord\\Parts\\WebSockets\\VoiceStateUpdate;</span>\n\n<span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">VOICE_STATE_UPDATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">VoiceStateUpdate</span> <span class=\"token variable\">$state</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$oldstate</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Requires the <code class=\"language-text\">Intents::GUILD_VOICE_STATES</code> intent.</p>\n<h3>Voice Server Update</h3>\n<p>Called with a <code class=\"language-text\">VoiceServerUpdate</code> object when a voice server is updated in a guild.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token comment\">// use Discord\\Parts\\WebSockets\\VoiceServerUpdate;</span>\n\n<span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">VOICE_SERVER_UPDATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">VoiceServerUpdate</span> <span class=\"token variable\">$guild</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","fields":{"idName":"voices","slug":"/03_events/10_voices/"}}},{"node":{"id":"3ada335f-5731-5a8e-b590-00d874be02b1","frontmatter":{"title":"Webhooks"},"html":"<h3>Webhooks Update</h3>\n<p>Called with a <code class=\"language-text\">Guild</code> and <code class=\"language-text\">Channel</code> object when a guild channel's webhooks are is created, updated, or deleted.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">WEBHOOKS_UPDATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-hint\">object</span> <span class=\"token variable\">$guild</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Discord</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span><span class=\"token keyword type-hint\">object</span> <span class=\"token variable\">$channel</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$guild</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Guild</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$channel</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Channel</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// $guild and $channel was cached</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// $guild and/or $channel was not in cache:</span>\n    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// \"guild\" {</span>\n        <span class=\"token comment\">//     \"id\": \"\" // webhook guild ID</span>\n        <span class=\"token comment\">// },</span>\n        <span class=\"token comment\">// \"channel\": {</span>\n               id<span class=\"token string double-quoted-string\">\": \"</span>\"<span class=\"token punctuation\">,</span> <span class=\"token comment\">// webhook channel ID</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Requires the <code class=\"language-text\">Intents::GUILD_WEBHOOKS</code> intent.</p>","fields":{"idName":"webhooks","slug":"/03_events/11_webhooks/"}}},{"node":{"id":"a86351bd-5061-5963-9af5-3e93b3f08d64","frontmatter":{"title":"Repositories"},"html":"<p>Repositories are containers for parts. They provide the functions to get, save and delete parts from the Discord servers. Different parts have many repositories.</p>\n<p>An example is the <code class=\"language-text\">Channel</code> part. It has 4 repositories: <code class=\"language-text\">members</code>, <code class=\"language-text\">messages</code>, <code class=\"language-text\">overwrites</code> and <code class=\"language-text\">webhooks</code>. Each of these repositories contain parts that relate to the <code class=\"language-text\">Channel</code> part, such as messages sent in the channel (<code class=\"language-text\">messages</code> repository), or if it is a voice channel the members currently in the channel (<code class=\"language-text\">members</code> repository).</p>\n<p>A full list of repositories is provided below in the parts section, per part.</p>\n<p>Repositories extend the <a href=\"#collection\">Collection</a> class. See the documentation on collections for extra methods.</p>\n<p>Examples provided below are based on the <code class=\"language-text\">guilds</code> repository in the Discord client.</p>\n<h3>Methods</h3>\n<p>All repositories extend the <code class=\"language-text\">AbstractRepository</code> class, and share a set of core methods.</p>\n<h4>Freshening the repository data</h4>\n<p>Clears the repository and fills it with new data from Discord. It takes no parameters and returns the repository in a promise.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token property\">guilds</span><span class=\"token operator\">-></span><span class=\"token function\">freshen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">GuildRepository</span> <span class=\"token variable\">$guilds</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4>Creating a part</h4>\n<p>Creates a repository part from an array of attributes and returns the part. Does not create the part in Discord servers, you must use the <code class=\"language-text\">->save()</code> function later.</p>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>attributes</td>\n<td>array</td>\n<td>Array of attributes to fill in the part. Optional</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$guild</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token property\">guilds</span><span class=\"token operator\">-></span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token string single-quoted-string\">'name'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'My new guild name'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// to save</span>\n<span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token property\">guilds</span><span class=\"token operator\">-></span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$guild</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4>Saving a part</h4>\n<p>Creates or updates a repository part in the Discord servers. Takes a part and returns the same part in a promise.</p>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>part</td>\n<td>Part</td>\n<td>The part to create or update</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token property\">guilds</span><span class=\"token operator\">-></span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$guild</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Guild</span> <span class=\"token variable\">$guild</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4>Deleting a part</h4>\n<p>Deletes a repository part from the Discord servers. Takes a part and returns the old part in a promise.</p>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>part</td>\n<td>Part</td>\n<td>The part to delete</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token property\">guilds</span><span class=\"token operator\">-></span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$guild</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Guild</span> <span class=\"token variable\">$guild</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4>Fetch a part</h4>\n<p>Fetches/freshens a part from the repository. If the part is present in the cache, it returns the cached version, otherwise it retrieves the part from Discord servers. Takes a part ID and returns the part in a promise.</p>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>string</td>\n<td>Part ID</td>\n</tr>\n<tr>\n<td>fresh</td>\n<td>bool</td>\n<td>Forces the method to skip checking the cache. Default is false</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token property\">guilds</span><span class=\"token operator\">-></span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'guild_id'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Guild</span> <span class=\"token variable\">$guild</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// or, if you don't want to check the cache</span>\n<span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token property\">guilds</span><span class=\"token operator\">-></span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'guild_id'</span><span class=\"token punctuation\">,</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Guild</span> <span class=\"token variable\">$guild</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","fields":{"idName":"repositories","slug":"/04_repositories/"}}},{"node":{"id":"40f03469-083a-593d-b487-6a1d53303a12","frontmatter":{"title":"Parts"},"html":"<p>Parts is the term used for the data structures inside Discord.\nAll parts share a common set of attributes and methods.</p>\n<p>Parts have a set list of fillable fields. If you attempt to set a field that is not accessible, it will not warn you.</p>\n<p>To create a part object, you can use the <code class=\"language-text\">new</code> syntax or the <code class=\"language-text\">factory</code> method. For example, creating a <code class=\"language-text\">Message</code> part:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$message</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Message</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// or</span>\n<span class=\"token variable\">$message</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token property\">factory</span><span class=\"token operator\">-></span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Message</span><span class=\"token operator\">::</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<p>Part attributes can be accessed similar to an object or like an array:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$message</span><span class=\"token operator\">-></span><span class=\"token property\">content</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'hello!'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// or</span>\n<span class=\"token variable\">$message</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'content'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'hello!'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$message</span><span class=\"token operator\">-></span><span class=\"token property\">content</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// or</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$message</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'content'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Filling a part with data</h3>\n<p>The <code class=\"language-text\">->fill(array $attributes)</code> function takes an array of attributes to fill the part. If a field is found that is not 'fillable', it is skipped.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$message</span><span class=\"token operator\">-></span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token string single-quoted-string\">'content'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'hello!'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Getting the raw attributes of a part</h3>\n<p>The <code class=\"language-text\">->getRawAttributes()</code> function returns the array representation of the part.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$attributes</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$message</span><span class=\"token operator\">-></span><span class=\"token function\">getRawAttributes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/**\n * [\n *     \"id\" => \"\",\n *     \"content\" => \"\",\n *     // ...\n * ]\n */</span></code></pre></div>","fields":{"idName":"parts","slug":"/05_parts/00_parts/"}}},{"node":{"id":"1d736a66-1579-5140-ad3c-d0a5267218b1","frontmatter":{"title":"Guild"},"html":"<p>Guilds represent Discord 'servers'.</p>\n<h3>Repositories</h3>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>notes</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>roles</td>\n<td><a href=\"#role\">Role</a></td>\n<td></td>\n</tr>\n<tr>\n<td>emojis</td>\n<td><a href=\"#emoji\">Emoji</a></td>\n<td></td>\n</tr>\n<tr>\n<td>members</td>\n<td><a href=\"#member\">Member</a></td>\n<td>May not contain offline members, see the <a href=\"#basics\"><code class=\"language-text\">loadAllMembers</code> option</a></td>\n</tr>\n<tr>\n<td>channels</td>\n<td><a href=\"#channel\">Channel</a></td>\n<td></td>\n</tr>\n<tr>\n<td>stage_instances</td>\n<td><a href=\"#stage_instance\">StageInstance</a></td>\n<td></td>\n</tr>\n<tr>\n<td>guild<em>scheduled</em>events</td>\n<td><a href=\"#scheduled_event\">ScheduledEvent</a></td>\n<td></td>\n</tr>\n<tr>\n<td>stickers</td>\n<td><a href=\"#sticker\">Sticker</a></td>\n<td></td>\n</tr>\n<tr>\n<td>invites</td>\n<td><a href=\"#invite\">Invite</a></td>\n<td>Not initially loaded</td>\n</tr>\n<tr>\n<td>bans</td>\n<td><a href=\"#ban\">Ban</a></td>\n<td>Not initially loaded without <a href=\"#basics\"><code class=\"language-text\">retrieveBans</code> option</a></td>\n</tr>\n<tr>\n<td>commands</td>\n<td><a href=\"#command\">Command</a></td>\n<td>Not initially loaded</td>\n</tr>\n<tr>\n<td>templates</td>\n<td><a href=\"#guild_template\">GuildTemplate</a></td>\n<td>Not initially loaded</td>\n</tr>\n<tr>\n<td>integrations</td>\n<td><a href=\"#integration\">Integration</a></td>\n<td>Not initially loaded</td>\n</tr>\n</tbody>\n</table>\n<h3>Creating a role</h3>\n<p>Shortcut for <code class=\"language-text\">$guild->roles->save($role);</code>. Takes an array of parameters for a role and returns a role part in a promise.</p>\n<h4>Parameters</h4>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n<th>default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name</td>\n<td>string</td>\n<td>Role name</td>\n<td>new role</td>\n</tr>\n<tr>\n<td>permissions</td>\n<td>string</td>\n<td>Bitwise value of permissions</td>\n<td>@everyone permissions</td>\n</tr>\n<tr>\n<td>color</td>\n<td>integer</td>\n<td>RGB color value</td>\n<td>0</td>\n</tr>\n<tr>\n<td>hoist</td>\n<td>bool</td>\n<td>Hoisted role?</td>\n<td>false</td>\n</tr>\n<tr>\n<td>icon</td>\n<td>string</td>\n<td>image data for Role icon</td>\n<td>null</td>\n</tr>\n<tr>\n<td>unicode_emoji</td>\n<td>string</td>\n<td>unicode emoji for Role icon</td>\n<td>null</td>\n</tr>\n<tr>\n<td>mentionable</td>\n<td>bool</td>\n<td>Mentionable role?</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$guild</span><span class=\"token operator\">-></span><span class=\"token function\">createRole</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token string single-quoted-string\">'name'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'New Role'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Role</span> <span class=\"token variable\">$role</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Transferring ownership of guild</h3>\n<p>Transfers the ownership of the guild to another member. The bot must own the guild to be able to transfer ownership. Takes a member object or a member ID and returns nothing in a promise.</p>\n<h4>Parameters</h4>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>member</td>\n<td>Member or member ID</td>\n<td>The member to get ownership</td>\n</tr>\n<tr>\n<td>reason</td>\n<td>string</td>\n<td>Reason for Audit Log</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$guild</span><span class=\"token operator\">-></span><span class=\"token function\">transferOwnership</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$member</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// or</span>\n<span class=\"token variable\">$guild</span><span class=\"token operator\">-></span><span class=\"token function\">transferOwnership</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'member_id'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Unbanning a member with a User or user ID</h3>\n<p>Unbans a member when passed a <code class=\"language-text\">User</code> object or a user ID. If you have the ban object, you can do <code class=\"language-text\">$guild->bans->delete($ban);</code>. Returns nothing in a promise.</p>\n<h4>Parameters</h4>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>user_id</td>\n<td><code class=\"language-text\">User</code> or user ID</td>\n<td>The user to unban</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$guild</span><span class=\"token operator\">-></span><span class=\"token function\">unban</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$user</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// or</span>\n<span class=\"token variable\">$guild</span><span class=\"token operator\">-></span><span class=\"token function\">unban</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'user_id'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Querying the Guild audit log</h3>\n<p>Takes an array of parameters to query the audit log for the guild. Returns an Audit Log object inside a promise.</p>\n<h4>Parameters</h4>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>user_id</td>\n<td>string, int, <code class=\"language-text\">Member</code>, <code class=\"language-text\">User</code></td>\n<td>Filters audit log by who performed the action</td>\n</tr>\n<tr>\n<td>action_type</td>\n<td><code class=\"language-text\">Entry</code> constants</td>\n<td>Filters audit log by the type of action</td>\n</tr>\n<tr>\n<td>before</td>\n<td>string, int, <code class=\"language-text\">Entry</code></td>\n<td>Retrieves audit logs before the given audit log object</td>\n</tr>\n<tr>\n<td>limit</td>\n<td>int between 1 and 100</td>\n<td>Limits the amount of audit log entries to return</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$guild</span><span class=\"token operator\">-></span><span class=\"token function\">getAuditLog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token string single-quoted-string\">'user_id'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'123456'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'action_type'</span> <span class=\"token operator\">=></span> <span class=\"token class-name static-context\">Entry</span><span class=\"token operator\">::</span><span class=\"token constant\">CHANNEL_CREATE</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'before'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$anotherEntry</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'limit'</span> <span class=\"token operator\">=></span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">AuditLog</span> <span class=\"token variable\">$auditLog</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$auditLog</span><span class=\"token operator\">-></span><span class=\"token property\">audit_log_entries</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$entry</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// $entry->...</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Creating an Emoji</h3>\n<p>Takes an array of parameters for an emoji and returns an emoji part in a promise.\nUse the second parameter to specify local file path instead.</p>\n<h4>Parameters</h4>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n<th>default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name</td>\n<td>string</td>\n<td>Emoji name</td>\n<td><em>required</em></td>\n</tr>\n<tr>\n<td>image</td>\n<td>string</td>\n<td>image data with base64 format, ignored if file path is specified</td>\n<td></td>\n</tr>\n<tr>\n<td>roles</td>\n<td>array</td>\n<td>Role IDs that are allowed to use the emoji</td>\n<td>[]</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$guild</span><span class=\"token operator\">-></span><span class=\"token function\">createEmoji</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token string single-quoted-string\">'name'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'elephpant'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token string single-quoted-string\">'/path/to/file.jpg'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string single-quoted-string\">'audit-log reason'</span>\n<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Emoji</span> <span class=\"token variable\">$emoji</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","fields":{"idName":"guild","slug":"/05_parts/01_guild/"}}},{"node":{"id":"d7f188fc-fdea-5897-9c79-8b6411e7e8ad","frontmatter":{"title":"Channel"},"html":"<p>Channels represent a Discord channel, whether it be a direct message channel, group channel, voice channel, text channel etc.</p>\n<h3>Properties</h3>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>string</td>\n<td>id of the channel</td>\n</tr>\n<tr>\n<td>name</td>\n<td>string</td>\n<td>name of the channel</td>\n</tr>\n<tr>\n<td>type</td>\n<td>int</td>\n<td>type of the channel, see Channel constants</td>\n</tr>\n<tr>\n<td>topic</td>\n<td>string</td>\n<td>topic of the channel</td>\n</tr>\n<tr>\n<td>guild_id</td>\n<td>string or null</td>\n<td>id of the guild the channel belongs to, null if direct message</td>\n</tr>\n<tr>\n<td>guild</td>\n<td>Guild or null</td>\n<td>guild the channel belongs to, null if direct message</td>\n</tr>\n<tr>\n<td>position</td>\n<td>int</td>\n<td>position of the channel in the Discord client</td>\n</tr>\n<tr>\n<td>is_private</td>\n<td>bool</td>\n<td>whether the message is a private direct message channel</td>\n</tr>\n<tr>\n<td>last<em>message</em>id</td>\n<td>string</td>\n<td>id of the last message sent in the channel</td>\n</tr>\n<tr>\n<td>bitrate</td>\n<td>int</td>\n<td>bitrate of the voice channel</td>\n</tr>\n<tr>\n<td>recipient</td>\n<td><a href=\"#user\">User</a></td>\n<td>recipient of the direct message, only for direct message channel</td>\n</tr>\n<tr>\n<td>recipients</td>\n<td>Collection of <a href=\"#user\">Users</a></td>\n<td>recipients of the group direct message, only for group dm channels</td>\n</tr>\n<tr>\n<td>nsfw</td>\n<td>bool</td>\n<td>whether the channel is set as NSFW</td>\n</tr>\n<tr>\n<td>user_limit</td>\n<td>int</td>\n<td>user limit of the channel for voice channels</td>\n</tr>\n<tr>\n<td>rate<em>limit</em>per_user</td>\n<td>int</td>\n<td>amount of time in seconds a user has to wait between messages</td>\n</tr>\n<tr>\n<td>icon</td>\n<td>string</td>\n<td>channel icon hash</td>\n</tr>\n<tr>\n<td>owner_id</td>\n<td>string</td>\n<td>owner of the group DM</td>\n</tr>\n<tr>\n<td>application_id</td>\n<td>string</td>\n<td>id of the group dm creator if it was via an oauth application</td>\n</tr>\n<tr>\n<td>parent_id</td>\n<td>string</td>\n<td>id of the parent of the channel if it is in a group</td>\n</tr>\n<tr>\n<td>last<em>pin</em>timestamp</td>\n<td><code class=\"language-text\">Carbon</code> timestamp</td>\n<td>when the last message was pinned in the channel</td>\n</tr>\n<tr>\n<td>rtc_region</td>\n<td>string</td>\n<td>Voice region id for the voice channel, automatic when set to null.</td>\n</tr>\n<tr>\n<td>video<em>quality</em>mode</td>\n<td>int</td>\n<td>The camera video quality mode of the voice channel, 1 when not present.</td>\n</tr>\n<tr>\n<td>default<em>auto</em>archive_duration</td>\n<td>int</td>\n<td>Default duration for newly created threads, in minutes, to automatically archive the thread after recent activity, can be set to: 60, 1440, 4320, 10080.</td>\n</tr>\n</tbody>\n</table>\n<h3>Repositories</h3>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>notes</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>overwrites</td>\n<td><a href=\"#overwrite\">Overwrite</a></td>\n<td>Contains permission overwrites</td>\n</tr>\n<tr>\n<td>members</td>\n<td>VoiceStateUpdate</td>\n<td>Only for voice channels. Contains voice members</td>\n</tr>\n<tr>\n<td>messages</td>\n<td><a href=\"#message\">Message</a></td>\n<td></td>\n</tr>\n<tr>\n<td>webhooks</td>\n<td><a href=\"#webhook\">Webhook</a></td>\n<td>Only available in text channels</td>\n</tr>\n<tr>\n<td>threads</td>\n<td><a href=\"#thread\">Thread</a></td>\n<td>Only available in text channels</td>\n</tr>\n<tr>\n<td>invites</td>\n<td><a href=\"#invite\">Invite</a></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3>Set permissions of a member or role</h3>\n<p>Sets the permissions of a member or role. Takes two arrays of permissions - one for allow and one for deny. See <a href=\"#permissions\">Channel Permissions</a> for a valid list of permissions. Returns nothing in a promise.</p>\n<h4>Parameters</h4>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n<th>default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>part</td>\n<td><a href=\"#member\">Member</a> or <a href=\"#role\">Role</a></td>\n<td>The part to apply the permissions to</td>\n<td>required</td>\n</tr>\n<tr>\n<td>allow</td>\n<td>array</td>\n<td>Array of permissions to allow the part</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>deny</td>\n<td>array</td>\n<td>Array of permissions to deny the part</td>\n<td>[]</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token comment\">// Member can send messages and attach files,</span>\n<span class=\"token comment\">// but can't add reactions to message.</span>\n<span class=\"token variable\">$channel</span><span class=\"token operator\">-></span><span class=\"token function\">setPermissions</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$member</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string single-quoted-string\">'send_messages'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'attach_files'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string single-quoted-string\">'add_reactions'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Set permissions of a member or role with an Overwrite</h3>\n<p>Sets the permissions of a member or role, but takes an <code class=\"language-text\">Overwrite</code> part instead of two arrays. Returns nothing in a promise.</p>\n<h4>Parameters</h4>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n<th>default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>part</td>\n<td><a href=\"#member\">Member</a> or <a href=\"#role\">Role</a></td>\n<td>The part to apply the permissions to</td>\n<td>required</td>\n</tr>\n<tr>\n<td>overwrite</td>\n<td><code class=\"language-text\">Overwrite</code> part</td>\n<td>The overwrite to apply</td>\n<td>required</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$allow</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ChannelPermission</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$discord</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string single-quoted-string\">'send_messages'</span> <span class=\"token operator\">=></span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'attach_files'</span> <span class=\"token operator\">=></span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$deny</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ChannelPermission</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$discord</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string single-quoted-string\">'add_reactions'</span> <span class=\"token operator\">=></span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$overwrite</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$channel</span><span class=\"token operator\">-></span><span class=\"token property\">overwrites</span><span class=\"token operator\">-></span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token string single-quoted-string\">'allow'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$allow</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'deny'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$deny</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Member can send messages and attach files,</span>\n<span class=\"token comment\">// but can't add reactions to message.</span>\n<span class=\"token variable\">$channel</span><span class=\"token operator\">-></span><span class=\"token function\">setOverwrite</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$member</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$overwrite</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Move member to voice channel</h3>\n<p>Moves a member to a voice channel if the member is already in one. Takes a <a href=\"#member\">Member</a> object or member ID and returns nothing in a promise.</p>\n<h4>Parameters</h4>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n<th>default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>member</td>\n<td><a href=\"#member\">Member</a> or string</td>\n<td>The member to move</td>\n<td>required</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$channel</span><span class=\"token operator\">-></span><span class=\"token function\">moveMember</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$member</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// or</span>\n\n<span class=\"token variable\">$channel</span><span class=\"token operator\">-></span><span class=\"token function\">moveMember</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'123213123123213'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Muting and unmuting member in voice channel</h3>\n<p>Mutes or unmutes a member in the voice channel. Takes a <a href=\"#member\">Member</a> object or member ID and returns nothing in a promise.</p>\n<h4>Parameters</h4>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n<th>default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>member</td>\n<td><a href=\"#member\">Member</a> or string</td>\n<td>The member to mute/unmute</td>\n<td>required</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token comment\">// muting a member with a member object</span>\n<span class=\"token variable\">$channel</span><span class=\"token operator\">-></span><span class=\"token function\">muteMember</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$member</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// unmuting a member with a member ID</span>\n<span class=\"token variable\">$channel</span><span class=\"token operator\">-></span><span class=\"token function\">unmuteMember</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'123213123123213'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Creating an invite</h3>\n<p>Creates an invite for a channel. Takes an array of options and returns the new invite in a promise.</p>\n<h4>Parameters</h4>\n<p>Parameters are in an array.</p>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n<th>default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>max_age</td>\n<td>int</td>\n<td>Maximum age of the invite in seconds</td>\n<td>24 hours</td>\n</tr>\n<tr>\n<td>max_uses</td>\n<td>int</td>\n<td>Maximum uses of the invite</td>\n<td>unlimited</td>\n</tr>\n<tr>\n<td>temporary</td>\n<td>bool</td>\n<td>Whether the invite grants temporary membership</td>\n<td>false</td>\n</tr>\n<tr>\n<td>unique</td>\n<td>bool</td>\n<td>Whether the invite should be unique</td>\n<td>false</td>\n</tr>\n<tr>\n<td>target_type</td>\n<td>int</td>\n<td>The type of target for this voice channel invite</td>\n<td></td>\n</tr>\n<tr>\n<td>target<em>user</em>id</td>\n<td>string</td>\n<td>The id of the user whose stream to display for this invite, required if target<em>type is `Invite::TARGET</em>TYPE_STREAM`, the user must be streaming in the channel</td>\n<td></td>\n</tr>\n<tr>\n<td>target<em>application</em>id</td>\n<td>string</td>\n<td>The id of the embedded application to open for this invite, required if target<em>type is `Invite::TARGET</em>TYPE<em>EMBEDDED</em>APPLICATION`, the application must have the EMBEDDED flag</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$channel</span><span class=\"token operator\">-></span><span class=\"token function\">createInvite</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token string single-quoted-string\">'max_age'</span> <span class=\"token operator\">=></span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 1 minute</span>\n    <span class=\"token string single-quoted-string\">'max_uses'</span> <span class=\"token operator\">=></span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 5 uses</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Invite</span> <span class=\"token variable\">$invite</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Bulk deleting messages</h3>\n<p>Deletes many messages at once. Takes an array of messages and/or message IDs and returns nothing in a promise.</p>\n<h4>Parameters</h4>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n<th>default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>messages</td>\n<td>array or collection of messages and/or message IDs</td>\n<td>The messages to delete</td>\n<td>default</td>\n</tr>\n<tr>\n<td>reason</td>\n<td>string</td>\n<td>Reason for Audit Log</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$channel</span><span class=\"token operator\">-></span><span class=\"token function\">deleteMessages</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token variable\">$message1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token variable\">$message2</span><span class=\"token punctuation\">,</span>\n    <span class=\"token variable\">$message3</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'my_message4_id'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'my_message5_id'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Getting message history</h3>\n<p>Retrieves message history with an array of options. Returns a collection of messages in a promise.</p>\n<h4>Parameters</h4>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n<th>default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>before</td>\n<td><a href=\"#message\">Message</a> or message ID</td>\n<td>Get messages before this message</td>\n<td></td>\n</tr>\n<tr>\n<td>after</td>\n<td><a href=\"#message\">Message</a> or message ID</td>\n<td>Get messages after this message</td>\n<td></td>\n</tr>\n<tr>\n<td>around</td>\n<td><a href=\"#message\">Message</a> or message ID</td>\n<td>Get messages around this message</td>\n<td></td>\n</tr>\n<tr>\n<td>limit</td>\n<td>int</td>\n<td>Number of messages to get, between 1 and 100</td>\n<td>100</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$channel</span><span class=\"token operator\">-></span><span class=\"token function\">getMessageHistory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token string single-quoted-string\">'limit'</span> <span class=\"token operator\">=></span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Collection</span> <span class=\"token variable\">$messages</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$messages</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Limit delete messages</h3>\n<p>Deletes a number of messages, in order from the last one sent. Takes an integer of messages to delete and returns an empty promise.</p>\n<h4>Parameters</h4>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n<th>default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>value</td>\n<td>int</td>\n<td>number of messages to delete, in the range 1-100</td>\n<td>required</td>\n</tr>\n<tr>\n<td>reason</td>\n<td>string</td>\n<td>Reason for Audit Log</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token comment\">// deletes the last 15 messages</span>\n<span class=\"token variable\">$channel</span><span class=\"token operator\">-></span><span class=\"token function\">limitDelete</span><span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Pin or unpin  a message</h3>\n<p>Pins or unpins a message from the channel pinboard. Takes a message object and returns the same message in a promise.</p>\n<h4>Parameters</h4>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n<th>default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>message</td>\n<td><a href=\"#message\">Message</a></td>\n<td>The message to pin/unpin</td>\n<td>required</td>\n</tr>\n<tr>\n<td>reason</td>\n<td>string</td>\n<td>Reason for Audit Log</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token comment\">// to pin</span>\n<span class=\"token variable\">$channel</span><span class=\"token operator\">-></span><span class=\"token function\">pinMessage</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$message</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Message</span> <span class=\"token variable\">$message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// to unpin</span>\n<span class=\"token variable\">$channel</span><span class=\"token operator\">-></span><span class=\"token function\">unpinMessage</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$message</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Message</span> <span class=\"token variable\">$message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Get invites</h3>\n<p>Gets the channels invites. Returns a collection of invites in a promise.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$channel</span><span class=\"token operator\">-></span><span class=\"token function\">getInvites</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Collection</span> <span class=\"token variable\">$invites</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$invites</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$invite</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Send a message</h3>\n<p>Sends a message to the channel. Takes a message builder. Returns the message in a promise.</p>\n<h4>Parameters</h4>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n<th>default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>message</td>\n<td>MessageBuilder</td>\n<td>Message content</td>\n<td>required</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$message</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">MessageBuilder</span><span class=\"token operator\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">-></span><span class=\"token function\">setContent</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Hello, world!'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">-></span><span class=\"token function\">addEmbed</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$embed</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">-></span><span class=\"token function\">setTts</span><span class=\"token punctuation\">(</span><span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$channel</span><span class=\"token operator\">-></span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$message</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Message</span> <span class=\"token variable\">$message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Send an embed</h3>\n<p>Sends an embed to the channel. Takes an embed and returns the sent message in a promise.</p>\n<h4>Parameters</h4>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n<th>default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>embed</td>\n<td><a href=\"#embed\">Embed</a></td>\n<td>The embed to send</td>\n<td>required</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$channel</span><span class=\"token operator\">-></span><span class=\"token function\">sendEmbed</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$embed</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Message</span> <span class=\"token variable\">$message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Broadcast typing</h3>\n<p>Broadcasts to the channel that the bot is typing. Genreally, bots should <em>not</em> use this route, but if a bot takes a while to process a request it could be useful. Returns nothing in a promise.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$channel</span><span class=\"token operator\">-></span><span class=\"token function\">broadcastTyping</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Create a message collector</h3>\n<p>Creates a message collector, which calls a filter function on each message received and inserts it into a collection if the function returns <code class=\"language-text\">true</code>. The collector is resolved after a specified time or limit, whichever is given or whichever happens first. Takes a callback, an array of options and returns a collection of messages in a promise.</p>\n<h4>Parameters</h4>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n<th>default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>filter</td>\n<td>callable</td>\n<td>The callback to call on every message</td>\n<td>required</td>\n</tr>\n<tr>\n<td>options</td>\n<td>array</td>\n<td>Array of options</td>\n<td>[]</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token comment\">// Collects 5 messages containing hello</span>\n<span class=\"token variable\">$channel</span><span class=\"token operator\">-></span><span class=\"token function\">createMessageCollector</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">fn</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$message</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">strpos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$message</span><span class=\"token operator\">-></span><span class=\"token property\">content</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'hello'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string single-quoted-string\">'limit'</span> <span class=\"token operator\">=></span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Collection</span> <span class=\"token variable\">$messages</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$messages</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4>Options</h4>\n<p>One of <code class=\"language-text\">time</code> or <code class=\"language-text\">limit</code> is required, or the collector will not resolve.</p>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>time</td>\n<td>int</td>\n<td>The time after which the collector will resolve, in milliseconds</td>\n</tr>\n<tr>\n<td>limit</td>\n<td>int</td>\n<td>The number of messages to be collected</td>\n</tr>\n</tbody>\n</table>\n<h3>Get pinned messages</h3>\n<p>Returns the messages pinned in the channel. Only applicable for text channels. Returns a collection of messages in a promise.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$channel</span><span class=\"token operator\">-></span><span class=\"token function\">getPinnedMessages</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Collection</span> <span class=\"token variable\">$messages</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$messages</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// $message->...</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","fields":{"idName":"channel","slug":"/05_parts/02_channel/"}}},{"node":{"id":"7a9a216c-3999-5616-8988-3c917872dda7","frontmatter":{"title":"Member"},"html":"<p>Members represent a user in a guild. There is a member object for every guild-user relationship, meaning that there will be multiple member objects in the Discord client with the same user ID, but they will belong to different guilds.</p>\n<p>A member object can also be serialised into a mention string. For example:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">MESSAGE_CREATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Message</span> <span class=\"token variable\">$message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Hello &lt;@member_id>!</span>\n    <span class=\"token comment\">// Note: `$message->member` will be `null` if the message originated from</span>\n    <span class=\"token comment\">// a private message, or if the member object was not cached.</span>\n    <span class=\"token variable\">$message</span><span class=\"token operator\">-></span><span class=\"token property\">channel</span><span class=\"token operator\">-></span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Hello '</span><span class=\"token operator\">.</span><span class=\"token variable\">$message</span><span class=\"token operator\">-></span><span class=\"token property\">member</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Properties</h3>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>user</td>\n<td><a href=\"#user\">User</a></td>\n<td>the user part of the member</td>\n</tr>\n<tr>\n<td>nick</td>\n<td>string</td>\n<td>the nickname of the member</td>\n</tr>\n<tr>\n<td>avatar</td>\n<td>?string</td>\n<td>The guild avatar URL of the member</td>\n</tr>\n<tr>\n<td>avatar_hash</td>\n<td>?string</td>\n<td>The guild avatar hash of the member</td>\n</tr>\n<tr>\n<td>roles</td>\n<td>Collection of <a href=\"#role\">Roles</a></td>\n<td>roles the member is a part of</td>\n</tr>\n<tr>\n<td>joined_at</td>\n<td><code class=\"language-text\">Carbon</code> timestamp</td>\n<td>when the member joined the guild</td>\n</tr>\n<tr>\n<td>deaf</td>\n<td>bool</td>\n<td>whether the member is deafened</td>\n</tr>\n<tr>\n<td>mute</td>\n<td>bool</td>\n<td>whether the member is muted</td>\n</tr>\n<tr>\n<td>pending</td>\n<td>?string</td>\n<td>whether the user has not yet passed the guild's Membership Screening requirements</td>\n</tr>\n<tr>\n<td>communication<em>disabled</em>until</td>\n<td><code class=\"language-text\">?Carbon</code></td>\n<td>when the user's timeout will expire and the user will be able to communicate in the guild again, null or a time in the past if the user is not timed out</td>\n</tr>\n<tr>\n<td>id</td>\n<td>string</td>\n<td>the user ID of the member</td>\n</tr>\n<tr>\n<td>username</td>\n<td>string</td>\n<td>the username of the member</td>\n</tr>\n<tr>\n<td>discriminator</td>\n<td>string</td>\n<td>the four digit discriminator of the member</td>\n</tr>\n<tr>\n<td>displayname</td>\n<td>string</td>\n<td>nick/username#discriminator</td>\n</tr>\n<tr>\n<td>guild</td>\n<td><a href=\"#guild\">Guild</a></td>\n<td>the guild the member is a part of</td>\n</tr>\n<tr>\n<td>guild_id</td>\n<td>string</td>\n<td>the id of the guild the member is a part of</td>\n</tr>\n<tr>\n<td>string</td>\n<td>status</td>\n<td>the status of the member</td>\n</tr>\n<tr>\n<td>game</td>\n<td><a href=\"#activity\">Activity</a></td>\n<td>the current activity of the member</td>\n</tr>\n<tr>\n<td>premium_since</td>\n<td><code class=\"language-text\">Carbon</code> timestamp</td>\n<td>when the member started boosting the guild</td>\n</tr>\n<tr>\n<td>activities</td>\n<td>Collection of <a href=\"#activity\">Activities</a></td>\n<td>the current activities of the member</td>\n</tr>\n</tbody>\n</table>\n<h3>Ban the member</h3>\n<p>Bans the member from the guild. Returns a <a href=\"#ban\">Ban</a> part in a promise.</p>\n<h4>Parameters</h4>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>daysToDelete</td>\n<td>int</td>\n<td>number of days back to delete messages, default none</td>\n</tr>\n<tr>\n<td>reason</td>\n<td>string</td>\n<td>reason for the ban</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$member</span><span class=\"token operator\">-></span><span class=\"token function\">ban</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'bad person'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Ban</span> <span class=\"token variable\">$ban</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Set the nickname of the member</h3>\n<p>Sets the nickname of the member. Requires the <code class=\"language-text\">MANAGE_NICKNAMES</code> permission or <code class=\"language-text\">CHANGE_NICKNAME</code> if changing self nickname. Returns nothing in a promise.</p>\n<h4>Parameters</h4>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>nick</td>\n<td>string</td>\n<td>nickname of the member, null to clear, default null</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$member</span><span class=\"token operator\">-></span><span class=\"token function\">setNickname</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'newnick'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Move member to channel</h3>\n<p>Moves the member to another voice channel. Member must already be in a voice channel. Takes a channel or channel ID and returns nothing in a promise.</p>\n<h4>Parameters</h4>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>channel</td>\n<td><a href=\"#channel\">Channel</a> or string</td>\n<td>the channel to move the member to</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$member</span><span class=\"token operator\">-></span><span class=\"token function\">moveMember</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$channel</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// or</span>\n\n<span class=\"token variable\">$member</span><span class=\"token operator\">-></span><span class=\"token function\">moveMember</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'123451231231'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Add member to role</h3>\n<p>Adds the member to a role. Takes a role or role ID and returns nothing in a promise.</p>\n<h4>Parameters</h4>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>role</td>\n<td><a href=\"#role\">Role</a> or string</td>\n<td>the role to add the member to</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$member</span><span class=\"token operator\">-></span><span class=\"token function\">addRole</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$role</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// or</span>\n\n<span class=\"token variable\">$member</span><span class=\"token operator\">-></span><span class=\"token function\">addRole</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'1231231231'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Remove member from role</h3>\n<p>Removes the member from a role. Takes a role or role ID and returns nothing in a promise.</p>\n<h4>Parameters</h4>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>role</td>\n<td><a href=\"#role\">Role</a> or string</td>\n<td>the role to remove the member from</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$member</span><span class=\"token operator\">-></span><span class=\"token function\">removeRole</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$role</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// or</span>\n\n<span class=\"token variable\">$member</span><span class=\"token operator\">-></span><span class=\"token function\">removeRole</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'1231231231'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Timeout member</h3>\n<p>Times out the member in the server. Takes a carbon or null to remove. Returns nothing in a promise.</p>\n<h4>Parameters</h4>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>communication<em>disabled</em>until</td>\n<td><code class=\"language-text\">Carbon</code> or <code class=\"language-text\">null</code></td>\n<td>the time for timeout to lasts on</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$member</span><span class=\"token operator\">-></span><span class=\"token function\">timeoutMember</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Carbon</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'6 hours'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// to remove</span>\n<span class=\"token variable\">$member</span><span class=\"token operator\">-></span><span class=\"token function\">timeoutMember</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Get permissions of member</h3>\n<p>Gets the effective permissions of the member:</p>\n<ul>\n<li>When given a channel, returns the effective permissions of a member in a channel.</li>\n<li>Otherwise, returns the effective permissions of a member in a guild.</li>\n</ul>\n<p>Returns a <a href=\"#permissions\">role permission</a>.</p>\n<h4>Parameters</h4>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>channel</td>\n<td><a href=\"#channel\">Channel</a> or null</td>\n<td>the channel to get the effective permissions for</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$permissions</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$member</span><span class=\"token operator\">-></span><span class=\"token function\">getPermissions</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$channel</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// or</span>\n\n<span class=\"token variable\">$permissions</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$member</span><span class=\"token operator\">-></span><span class=\"token function\">getPermissions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Get guild specific avatar URL</h3>\n<p>Gets the server-specific avatar URL for the member. Only call this function if you need to change the format or size of the image, otherwise use <code class=\"language-text\">$member->avatar</code>. Returns a string.</p>\n<h4>Parameters</h4>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>format</td>\n<td>string</td>\n<td>format of the image, one of png, jpg or webp, default webp and gif if animated</td>\n</tr>\n<tr>\n<td>size</td>\n<td>int</td>\n<td>size of the image, default 1024</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$url</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$member</span><span class=\"token operator\">-></span><span class=\"token function\">getAvatarAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'png'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2048</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$url</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// https://cdn.discordapp.com/guilds/:guild_id/users/:id/avatars/:avatar_hash.png?size=2048</span></code></pre></div>","fields":{"idName":"member","slug":"/05_parts/03_member/"}}},{"node":{"id":"44950de9-986a-5951-9ef7-a3391e3a875b","frontmatter":{"title":"Message"},"html":"<p>Messages are present in channels and can be anything from a cross post to a reply and a regular message.</p>\n<h3>Properties</h3>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>string</td>\n<td>id of the message</td>\n</tr>\n<tr>\n<td>channel_id</td>\n<td>string</td>\n<td>id of the channel the message was sent in</td>\n</tr>\n<tr>\n<td>channel</td>\n<td><a href=\"#channel\">Channel</a></td>\n<td>channel the message was sent in</td>\n</tr>\n<tr>\n<td>guild_id</td>\n<td>string or null</td>\n<td>the unique identifier of the guild that the channel the message was sent in belongs to</td>\n</tr>\n<tr>\n<td>guild</td>\n<td><a href=\"#guild\">Guild</a> or null</td>\n<td>the guild that the message was sent in</td>\n</tr>\n<tr>\n<td>content</td>\n<td>string</td>\n<td>content of the message</td>\n</tr>\n<tr>\n<td>type</td>\n<td>int, <a href=\"#message\">Message</a> constants</td>\n<td>type of the message</td>\n</tr>\n<tr>\n<td>mentions</td>\n<td>Collection of <a href=\"#user\">Users</a></td>\n<td>users mentioned in the message</td>\n</tr>\n<tr>\n<td>author</td>\n<td><a href=\"#user\">User</a></td>\n<td>the author of the message</td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>string</td>\n<td>id of the user that sent the message</td>\n</tr>\n<tr>\n<td>member</td>\n<td><a href=\"#member\">Member</a></td>\n<td>the member that sent this message, or null if it was in a private message</td>\n</tr>\n<tr>\n<td>mention_everyone</td>\n<td>bool</td>\n<td>whether @everyone was mentioned</td>\n</tr>\n<tr>\n<td>timestamp</td>\n<td><code class=\"language-text\">Carbon</code> timestamp</td>\n<td>the time the message was sent</td>\n</tr>\n<tr>\n<td>edited_timestamp</td>\n<td><code class=\"language-text\">Carbon</code> timestamp or null</td>\n<td>the time the message was edited or null if it hasn't been edited</td>\n</tr>\n<tr>\n<td>tts</td>\n<td>bool</td>\n<td>whether text to speech was set when the message was sent</td>\n</tr>\n<tr>\n<td>attachments</td>\n<td>Collection of <a href=\"#attachment\">Attachments</a></td>\n<td>array of attachments</td>\n</tr>\n<tr>\n<td>embeds</td>\n<td>Collection of <a href=\"#embed\">Embeds</a></td>\n<td>embeds contained in the message</td>\n</tr>\n<tr>\n<td>nonce</td>\n<td>string</td>\n<td>randomly generated string for client</td>\n</tr>\n<tr>\n<td>mention_roles</td>\n<td>Collection of <a href=\"#role\">Roles</a></td>\n<td>any roles that were mentioned in the message</td>\n</tr>\n<tr>\n<td>mention_channels</td>\n<td>Collection of <a href=\"#channel\">Channels</a></td>\n<td>any channels that were mentioned in the message</td>\n</tr>\n<tr>\n<td>pinned</td>\n<td>bool</td>\n<td>whether the message is pinned</td>\n</tr>\n<tr>\n<td>reactions</td>\n<td>reaction repository</td>\n<td>any reactions on the message</td>\n</tr>\n<tr>\n<td>webhook_id</td>\n<td>string</td>\n<td>id of the webhook that sent the message</td>\n</tr>\n<tr>\n<td>activity</td>\n<td>object</td>\n<td>current message activity, requires rich present</td>\n</tr>\n<tr>\n<td>application</td>\n<td>object</td>\n<td>application of the message, requires rich presence</td>\n</tr>\n<tr>\n<td>application_id</td>\n<td>string</td>\n<td>if the message is a response to an Interaction, this is the id of the interaction's application</td>\n</tr>\n<tr>\n<td>message_reference</td>\n<td>object</td>\n<td>message that is referenced by the message</td>\n</tr>\n<tr>\n<td>referenced_message</td>\n<td><a href=\"#message\">Message</a></td>\n<td>the message that is referenced in a reply</td>\n</tr>\n<tr>\n<td>interaction</td>\n<td>object</td>\n<td>the interaction which triggered the message (application commands)</td>\n</tr>\n<tr>\n<td>thread</td>\n<td><a href=\"#thread\">Thread</a></td>\n<td>the thread that the message was sent in</td>\n</tr>\n<tr>\n<td>components</td>\n<td><a href=\"#component\">Component</a></td>\n<td>sent if the message contains components like buttons, action rows, or other interactive components</td>\n</tr>\n<tr>\n<td>sticker_items</td>\n<td><a href=\"#sticker\">Sticker</a></td>\n<td>stickers attached to the message</td>\n</tr>\n<tr>\n<td>flags</td>\n<td>int</td>\n<td>message flags, see below 5 properties</td>\n</tr>\n<tr>\n<td>crossposted</td>\n<td>bool</td>\n<td>whether the message has been crossposted</td>\n</tr>\n<tr>\n<td>is_crosspost</td>\n<td>bool</td>\n<td>whether the message is a crosspost</td>\n</tr>\n<tr>\n<td>suppress_emeds</td>\n<td>bool</td>\n<td>whether embeds have been supressed</td>\n</tr>\n<tr>\n<td>source<em>message</em>deleted</td>\n<td>bool</td>\n<td>whether the source message has been deleted e.g. crosspost</td>\n</tr>\n<tr>\n<td>urgent</td>\n<td>bool</td>\n<td>whether message is urgent</td>\n</tr>\n<tr>\n<td>has_thread</td>\n<td>bool</td>\n<td>whether this message has an associated thread, with the same id as the message</td>\n</tr>\n<tr>\n<td>ephemeral</td>\n<td>bool</td>\n<td>whether this message is only visible to the user who invoked the Interaction</td>\n</tr>\n<tr>\n<td>loading</td>\n<td>bool</td>\n<td>whether this message is an Interaction Response and the bot is \"thinking\"</td>\n</tr>\n<tr>\n<td>failed<em>to</em>mention<em>some</em>roles<em>in</em>thread</td>\n<td>bool</td>\n<td>this message failed to mention some roles and add their members to the thread</td>\n</tr>\n</tbody>\n</table>\n<h3>Reply to a message</h3>\n<p>Sends a \"reply\" to the message. Returns the new message in a promise.</p>\n<h4>Parameters</h4>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>text</td>\n<td>string</td>\n<td>text to send in the message</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$message</span><span class=\"token operator\">-></span><span class=\"token function\">reply</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'hello!'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Message</span> <span class=\"token variable\">$message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Crosspost a message</h3>\n<p>Crossposts a message to any channels that are following the channel the message was sent in. Returns the crossposted message in a promise.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$message</span><span class=\"token operator\">-></span><span class=\"token function\">crosspost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Message</span> <span class=\"token variable\">$message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Reply to a message after a delay</h3>\n<p>Similar to replying to a message, also takes a <code class=\"language-text\">delay</code> parameter in which the reply will be sent after. Returns the new message in a promise.</p>\n<h4>Parameters</h4>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>text</td>\n<td>string</td>\n<td>text to send in the message</td>\n</tr>\n<tr>\n<td>delay</td>\n<td>int</td>\n<td>time in milliseconds to delay before sending the message</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token comment\">// &lt;@message_author_id>, hello! after 1.5 seconds</span>\n<span class=\"token variable\">$message</span><span class=\"token operator\">-></span><span class=\"token function\">delayedReply</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'hello!'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1500</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Message</span> <span class=\"token variable\">$message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>React to a message</h3>\n<p>Adds a reaction to a message. Takes an <a href=\"#emoji\">Emoji</a> object, a custom emoji string or a unicode emoji. Returns nothing in a promise.</p>\n<h4>Parameters</h4>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>emoticon</td>\n<td><a href=\"#emoji\">Emoji</a> or string</td>\n<td>the emoji to react with</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$message</span><span class=\"token operator\">-></span><span class=\"token function\">react</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$emoji</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// or</span>\n\n<span class=\"token variable\">$message</span><span class=\"token operator\">-></span><span class=\"token function\">react</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">':michael:251127796439449631'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// or</span>\n\n<span class=\"token variable\">$message</span><span class=\"token operator\">-></span><span class=\"token function\">react</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'😀'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Delete reaction(s) from a message</h3>\n<p>Deletes reaction(s) from a message. Has four methods of operation, described below. Returns nothing in a promise.</p>\n<h4>Parameters</h4>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>int</td>\n<td>type of deletion, one of <code class=\"language-text\">Message::REACT_DELETE_ALL, Message::REACT_DELETE_ME, Message:REACT_DELETE_ID, Message::REACT_DELETE_EMOJI</code></td>\n</tr>\n<tr>\n<td>emoticon</td>\n<td><a href=\"#emoji\">Emoji</a>, string, null</td>\n<td>emoji to delete, require if using <code class=\"language-text\">DELETE_ID</code>, <code class=\"language-text\">DELETE_ME</code> or <code class=\"language-text\">DELETE_EMOJI</code></td>\n</tr>\n<tr>\n<td>id</td>\n<td>string, null</td>\n<td>id of the user to delete reactions for, required by <code class=\"language-text\">DELETE_ID</code></td>\n</tr>\n</tbody>\n</table>\n<h4>Delete all reactions</h4>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$message</span><span class=\"token operator\">-></span><span class=\"token function\">deleteReaction</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Message</span><span class=\"token operator\">::</span><span class=\"token constant\">REACT_DELETE_ALL</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4>Delete reaction by current user</h4>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$message</span><span class=\"token operator\">-></span><span class=\"token function\">deleteReaction</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Message</span><span class=\"token operator\">::</span><span class=\"token constant\">REACT_DELETE_ME</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$emoji</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4>Delete reaction by another user</h4>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$message</span><span class=\"token operator\">-></span><span class=\"token function\">deleteReaction</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Message</span><span class=\"token operator\">::</span><span class=\"token constant\">REACT_DELETE_ID</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$emoji</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'member_id'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4>Delete all reactions of one emoji</h4>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$message</span><span class=\"token operator\">-></span><span class=\"token function\">deleteReaction</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Message</span><span class=\"token operator\">::</span><span class=\"token constant\">REACT_DELETE_EMOJI</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$emoji</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Delete the message</h3>\n<p>Deletes the message. Returns nothing in a promise.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$message</span><span class=\"token operator\">-></span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Edit the message</h3>\n<p>Updates the message. Takes a message builder. Returns the updated message in a promise.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$message</span><span class=\"token operator\">-></span><span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">MessageBuilder</span><span class=\"token operator\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">-></span><span class=\"token function\">setContent</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'new content'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Message</span> <span class=\"token variable\">$message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Note fields not set in the builder will not be updated, and will retain their previous value.</p>\n<h3>Create reaction collector</h3>\n<p>Creates a reaction collector. Works similar to <a href=\"#channel\">Channel</a>'s reaction collector. Takes a callback and an array of options. Returns a collection of reactions in a promise.</p>\n<h4>Options</h4>\n<p>At least one of <code class=\"language-text\">time</code> or <code class=\"language-text\">limit</code> must be specified.</p>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>time</td>\n<td>int or false</td>\n<td>time in milliseconds until the collector finishes</td>\n</tr>\n<tr>\n<td>limit</td>\n<td>int or false</td>\n<td>amount of reactions to be collected until the collector finishes</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$message</span><span class=\"token operator\">-></span><span class=\"token function\">createReactionCollector</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">MessageReaction</span> <span class=\"token variable\">$reaction</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// return true or false depending on whether you want the reaction to be collected.</span>\n    <span class=\"token keyword\">return</span> <span class=\"token variable\">$reaction</span><span class=\"token operator\">-></span><span class=\"token property\">user_id</span> <span class=\"token operator\">==</span> <span class=\"token string single-quoted-string\">'123123123123'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">// will resolve after 1.5 seconds or 2 reactions</span>\n    <span class=\"token string single-quoted-string\">'time'</span> <span class=\"token operator\">=></span> <span class=\"token number\">1500</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'limit'</span> <span class=\"token operator\">=></span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Collection</span> <span class=\"token variable\">$reactions</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$reactions</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$reaction</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Add embed to message</h3>\n<p>Adds an embed to a message. Takes an embed object. Will overwrite the old embed (if there is one). Returns the updated message in a promise.</p>\n<h4>Parameters</h4>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>embed</td>\n<td><a href=\"#embed\">Embed</a></td>\n<td>the embed to add</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$message</span><span class=\"token operator\">-></span><span class=\"token function\">addEmbed</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$embed</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Message</span> <span class=\"token variable\">$message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","fields":{"idName":"message","slug":"/05_parts/04_message/"}}},{"node":{"id":"45a01e9a-15d3-5e86-ad43-c9533b36a12c","frontmatter":{"title":"User"},"html":"<p>User represents a user of Discord. The bot can \"see\" any users that to a guild that they also belong to.</p>\n<h3>Properties</h3>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>string</td>\n<td>id of the user</td>\n</tr>\n<tr>\n<td>username</td>\n<td>string</td>\n<td>username of the user</td>\n</tr>\n<tr>\n<td>discriminator</td>\n<td>string</td>\n<td>four-digit discriminator of the user</td>\n</tr>\n<tr>\n<td>displayname</td>\n<td>string</td>\n<td>username#discriminator</td>\n</tr>\n<tr>\n<td>avatar</td>\n<td>string</td>\n<td>avatar URL of the user</td>\n</tr>\n<tr>\n<td>avatar_hash</td>\n<td>string</td>\n<td>avatar hash of the user</td>\n</tr>\n<tr>\n<td>bot</td>\n<td>bool</td>\n<td>whether the user is a bot</td>\n</tr>\n<tr>\n<td>system</td>\n<td>bool</td>\n<td>whetehr the user is a system user e.g. Clyde</td>\n</tr>\n<tr>\n<td>mfa_enabled</td>\n<td>bool</td>\n<td>whether the user has multifactor authentication enabled</td>\n</tr>\n<tr>\n<td>banner</td>\n<td>?string</td>\n<td>the banner URL of the user.</td>\n</tr>\n<tr>\n<td>banner_hash</td>\n<td>?string</td>\n<td>the banner URL of the user.</td>\n</tr>\n<tr>\n<td>accent_color</td>\n<td>?int</td>\n<td>the user's banner color encoded as an integer representation</td>\n</tr>\n<tr>\n<td>locale</td>\n<td>?string</td>\n<td>locale of the user</td>\n</tr>\n<tr>\n<td>verified</td>\n<td>bool</td>\n<td>whether the user is verified</td>\n</tr>\n<tr>\n<td>email</td>\n<td>?string</td>\n<td>email of the user</td>\n</tr>\n<tr>\n<td>flags</td>\n<td>?int</td>\n<td>user flags, see the <code class=\"language-text\">User</code> classes constants. use bit masks to compare</td>\n</tr>\n<tr>\n<td>premium_type</td>\n<td>?int</td>\n<td>type of nitro, see the <code class=\"language-text\">User</code> classes constants</td>\n</tr>\n<tr>\n<td>public_flags</td>\n<td>?int</td>\n<td>see flags above</td>\n</tr>\n</tbody>\n</table>\n<h3>Get private channel for user</h3>\n<p>Gets the private direct message channel for the user. Returns a <a href=\"#channel\">Channel</a> in a promise.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$user</span><span class=\"token operator\">-></span><span class=\"token function\">getPrivateChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Channel</span> <span class=\"token variable\">$channel</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Send user a message</h3>\n<p>Sends a private direct message to the user. Note that your bot account can be suspended for doing this, consult Discord documentation for more information. Returns the message in a promise.</p>\n<h4>Parameters</h4>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>message</td>\n<td>string</td>\n<td>content to send</td>\n</tr>\n<tr>\n<td>tts</td>\n<td>bool</td>\n<td>whether to send the message as text to speech</td>\n</tr>\n<tr>\n<td>embed</td>\n<td>Embed</td>\n<td>embed to send in the message</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$user</span><span class=\"token operator\">-></span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Hello, world!'</span><span class=\"token punctuation\">,</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$embed</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Message</span> <span class=\"token variable\">$message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Get avatar URL</h3>\n<p>Gets the avatar URL for the user. Only call this function if you need to change the format or size of the image, otherwise use <code class=\"language-text\">$user->avatar</code>. Returns a string.</p>\n<h4>Parameters</h4>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>format</td>\n<td>string</td>\n<td>format of the image, one of png, jpg or webp, default webp or gif if animated</td>\n</tr>\n<tr>\n<td>size</td>\n<td>int</td>\n<td>size of the image, default 1024</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$url</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$user</span><span class=\"token operator\">-></span><span class=\"token function\">getAvatarAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'png'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2048</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$url</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// https://cdn.discordapp.com/avatars/:user_id/:avatar_hash.png?size=2048</span></code></pre></div>\n<h3>Get banner URL</h3>\n<p>Gets the banner URL for the user. Only call this function if you need to change the format or size of the image, otherwise use <code class=\"language-text\">$user->banner</code>.\nReturns a string or <code class=\"language-text\">null</code> if user has no banner image set.</p>\n<h4>Parameters</h4>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>format</td>\n<td>string</td>\n<td>format of the image, one of png, jpg or webp, default png or gif if animated</td>\n</tr>\n<tr>\n<td>size</td>\n<td>int</td>\n<td>size of the image, default 600</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$url</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$user</span><span class=\"token operator\">-></span><span class=\"token function\">getBannerAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'png'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$url</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// https://cdn.discordapp.com/banners/:user_id/:banner_hash.png?size=1024</span></code></pre></div>","fields":{"idName":"user","slug":"/05_parts/05_user/"}}},{"node":{"id":"a0bc2bf2-70d5-5425-bb73-c98a5feebed3","frontmatter":{"title":"Collection"},"html":"<p>Collections are exactly what they sound like - collections of items. In DiscordPHP collections are based around the idea of parts, but they can be used for any type of item.</p>\n<div>\nCollections implement interfaces allowing them to be accessed like arrays, such as:\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token comment\">// square bracket index access</span>\n<span class=\"token variable\">$collec</span><span class=\"token punctuation\">[</span><span class=\"token number\">123</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'asdf'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$collec</span><span class=\"token punctuation\">[</span><span class=\"token number\">123</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// asdf</span>\n\n<span class=\"token comment\">// foreach loops</span>\n<span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$collec</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$item</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// json serialization</span>\n<span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$collec</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// array serialization</span>\n<span class=\"token variable\">$collecArray</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">array</span><span class=\"token punctuation\">)</span> <span class=\"token variable\">$collec</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// string serialization</span>\n<span class=\"token variable\">$jsonCollec</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">string</span><span class=\"token punctuation\">)</span> <span class=\"token variable\">$collec</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// same as json_encode($collec)</span></code></pre></div>\n</div>\n<h4>Creating a collection</h4>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>items</td>\n<td>array</td>\n<td>Array of items for the collection. Default is empty collection</td>\n</tr>\n<tr>\n<td>discrim</td>\n<td>string or null</td>\n<td>The discriminator used to discriminate between parts. Default 'id'</td>\n</tr>\n<tr>\n<td>class</td>\n<td>string or null</td>\n<td>The type of class contained in the collection. Default null</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token comment\">// Creates an empty collection with discriminator of 'id' and no class type.</span>\n<span class=\"token comment\">// Any item can be inserted into this collection.</span>\n<span class=\"token variable\">$collec</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Collection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Creates an empty collection with no discriminator and no class type.</span>\n<span class=\"token comment\">// Similar to a laravel collection.</span>\n<span class=\"token variable\">$collec</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Collection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4>Getting an item</h4>\n<p>Gets an item from the collection, with a key and value.</p>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>key</td>\n<td>any</td>\n<td>The key to search with</td>\n</tr>\n<tr>\n<td>value</td>\n<td>any</td>\n<td>The value that the key should match</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token comment\">// Collection with 3 items, discriminator is 'id', no class type</span>\n<span class=\"token variable\">$collec</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Collection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span>\n        <span class=\"token string single-quoted-string\">'id'</span> <span class=\"token operator\">=></span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string single-quoted-string\">'text'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'My ID is 1.'</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span>\n        <span class=\"token string single-quoted-string\">'id'</span> <span class=\"token operator\">=></span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string single-quoted-string\">'text'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'My ID is 2.'</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span>\n        <span class=\"token string single-quoted-string\">'id'</span> <span class=\"token operator\">=></span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string single-quoted-string\">'text'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'My ID is 3.'</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// [</span>\n<span class=\"token comment\">//     'id' => 1,</span>\n<span class=\"token comment\">//     'text' => 'My ID is 1.'</span>\n<span class=\"token comment\">// ]</span>\n<span class=\"token variable\">$item</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$collec</span><span class=\"token operator\">-></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// [</span>\n<span class=\"token comment\">//     'id' => 1,</span>\n<span class=\"token comment\">//     'text' => 'My ID is 1.'</span>\n<span class=\"token comment\">// ]</span>\n<span class=\"token variable\">$item</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$collec</span><span class=\"token operator\">-></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'text'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'My ID is 1.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4>Adding an item</h4>\n<p>Adds an item to the collection. Note that if <code class=\"language-text\">class</code> is set in the constructor and the class of the item inserted is not the same, it will not insert.</p>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>$item</td>\n<td>any</td>\n<td>The item to insert</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token comment\">// empty, no discrim, no class</span>\n<span class=\"token variable\">$collec</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Collection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$collec</span><span class=\"token operator\">-></span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$collec</span><span class=\"token operator\">-></span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'asdf'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$collec</span><span class=\"token operator\">-></span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ---</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">X</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$y</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$y</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">y</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$y</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// empty, discrim 'y', class X</span>\n<span class=\"token variable\">$collec</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Collection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'y'</span><span class=\"token punctuation\">,</span> <span class=\"token class-name static-context\">X</span><span class=\"token operator\">::</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$collec</span><span class=\"token operator\">-></span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">X</span><span class=\"token punctuation\">(</span><span class=\"token number\">123</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$collec</span><span class=\"token operator\">-></span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">123</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// won't insert</span>\n\n<span class=\"token comment\">// new X(123)</span>\n<span class=\"token variable\">$collec</span><span class=\"token operator\">-></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'y'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">123</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4>Pulling an item</h4>\n<p>Removes an item from the collection and returns it.</p>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>key</td>\n<td>any</td>\n<td>The key to look for</td>\n</tr>\n<tr>\n<td>default</td>\n<td>any</td>\n<td>Default if key is not found. Default null</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$collec</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Collection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$collec</span><span class=\"token operator\">-></span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$collec</span><span class=\"token operator\">-></span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$collec</span><span class=\"token operator\">-></span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$collec</span><span class=\"token operator\">-></span><span class=\"token function\">pull</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// returns at 1 index - which is actually 2</span>\n<span class=\"token variable\">$collec</span><span class=\"token operator\">-></span><span class=\"token function\">pull</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// returns null</span>\n<span class=\"token variable\">$collec</span><span class=\"token operator\">-></span><span class=\"token function\">pull</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">123</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// returns 123</span></code></pre></div>\n<h4>Filling the collection</h4>\n<p>Fills the collection with an array of items.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$collec</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Collection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$collec</span><span class=\"token operator\">-></span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4>Number of items</h4>\n<p>Returns the number of items in the collection.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$collec</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Collection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$collec</span><span class=\"token operator\">-></span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3</span></code></pre></div>\n<h4>Getting the first item</h4>\n<p>Gets the first item of the collection.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$collec</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Collection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$collec</span><span class=\"token operator\">-></span><span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span></code></pre></div>\n<h4>Filtering a collection</h4>\n<p>Filters the collection with a given callback function. The callback function is called for every item and is called with the item. If the callback returns true, the item is added to the new collection. Returns a new collection.</p>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>callback</td>\n<td>callable</td>\n<td>The callback called on every item</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$collec</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Collection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">101</span><span class=\"token punctuation\">,</span> <span class=\"token number\">102</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// [ 101, 102 ]</span>\n<span class=\"token variable\">$newCollec</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$collec</span><span class=\"token operator\">-></span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$item</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token variable\">$item</span> <span class=\"token operator\">></span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4>Clearing a collection</h4>\n<p>Clears the collection.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$collec</span><span class=\"token operator\">-></span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// $collec = []</span></code></pre></div>\n<h4>Mapping a collection</h4>\n<p>A given callback function is called on each item in the collection, and the result is inserted into a new collection.</p>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>callback</td>\n<td>callable</td>\n<td>The callback called on every item</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$collec</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Collection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">101</span><span class=\"token punctuation\">,</span> <span class=\"token number\">102</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// [ 100, 200, 300, 10000, 10100, 10200 ]</span>\n<span class=\"token variable\">$newCollec</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$collec</span><span class=\"token operator\">-></span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$item</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token variable\">$item</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4>Converting to array</h4>\n<p>Converts a collection to an array.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$arr</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$collec</span><span class=\"token operator\">-></span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","fields":{"idName":"collection","slug":"/06_collection/"}}},{"node":{"id":"b11c28e7-a146-5700-ad7f-f641f062e7c1","frontmatter":{"title":"Permissions"},"html":"<p>There are two types of permissions - channel permissions and role permissions. They are represented by their individual classes, but both extend the same abstract permission class.</p>\n<h3>Properties</h3>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>bitwise</td>\n<td>int</td>\n<td>bitwise representation</td>\n</tr>\n<tr>\n<td>create_instant_invite</td>\n<td>bool</td>\n<td></td>\n</tr>\n<tr>\n<td>manage_channels</td>\n<td>bool</td>\n<td></td>\n</tr>\n<tr>\n<td>view_channel</td>\n<td>bool</td>\n<td></td>\n</tr>\n<tr>\n<td>manage_roles</td>\n<td>bool</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>The rest of the properties are listed under each permission type, all are type of <code class=\"language-text\">bool</code>.</p>\n<h3>Methods</h3>\n<h4>Get all valid permissions</h4>\n<p>Returns a list of valid permissions, in key value form. Static method.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">ChannelPermission</span><span class=\"token operator\">::</span><span class=\"token function\">getPermissions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [</span>\n<span class=\"token comment\">//     'priority_speaker' => 8,</span>\n<span class=\"token comment\">//     // ...</span>\n<span class=\"token comment\">// ]</span></code></pre></div>\n<h3>Channel Permission</h3>\n<p>Represents permissions for text, voice, and stage instance channels.</p>\n<h4>Text Channel Permissions</h4>\n<ul>\n<li><code class=\"language-text\">create_instant_invite</code></li>\n<li><code class=\"language-text\">manage_channels</code></li>\n<li><code class=\"language-text\">view_channel</code></li>\n<li><code class=\"language-text\">manage_roles</code></li>\n<li><code class=\"language-text\">add_reactions</code></li>\n<li><code class=\"language-text\">send_messages</code></li>\n<li><code class=\"language-text\">send_tts_messages</code></li>\n<li><code class=\"language-text\">manage_messages</code></li>\n<li><code class=\"language-text\">embed_links</code></li>\n<li><code class=\"language-text\">attach_files</code></li>\n<li><code class=\"language-text\">read_message_history</code></li>\n<li><code class=\"language-text\">mention_everyone</code></li>\n<li><code class=\"language-text\">use_external_emojis</code></li>\n<li><code class=\"language-text\">manage_webhooks</code></li>\n<li><code class=\"language-text\">use_application_commands</code></li>\n<li><code class=\"language-text\">manage_threads</code></li>\n<li><code class=\"language-text\">create_public_threads</code></li>\n<li><code class=\"language-text\">create_private_threads</code></li>\n<li><code class=\"language-text\">use_external_stickers</code></li>\n<li><code class=\"language-text\">send_messages_in_threads</code></li>\n</ul>\n<h4>Voice Channel Permissions</h4>\n<ul>\n<li><code class=\"language-text\">create_instant_invite</code></li>\n<li><code class=\"language-text\">manage_channels</code></li>\n<li><code class=\"language-text\">view_channel</code></li>\n<li><code class=\"language-text\">manage_roles</code></li>\n<li><code class=\"language-text\">priority_speaker</code></li>\n<li><code class=\"language-text\">stream</code></li>\n<li><code class=\"language-text\">connect</code></li>\n<li><code class=\"language-text\">speak</code></li>\n<li><code class=\"language-text\">mute_members</code></li>\n<li><code class=\"language-text\">deafen_members</code></li>\n<li><code class=\"language-text\">move_members</code></li>\n<li><code class=\"language-text\">use_vad</code></li>\n<li><code class=\"language-text\">manage_events</code></li>\n<li><code class=\"language-text\">create_events</code></li>\n<li><code class=\"language-text\">use_embedded_activities</code> was <code class=\"language-text\">start_embedded_activities</code></li>\n</ul>\n<h4>Stage Instance Channel Permissions</h4>\n<ul>\n<li><code class=\"language-text\">create_instant_invite</code></li>\n<li><code class=\"language-text\">manage_channels</code></li>\n<li><code class=\"language-text\">view_channel</code></li>\n<li><code class=\"language-text\">manage_roles</code></li>\n<li><code class=\"language-text\">connect</code></li>\n<li><code class=\"language-text\">mute_members</code></li>\n<li><code class=\"language-text\">deafen_members</code></li>\n<li><code class=\"language-text\">move_members</code></li>\n<li><code class=\"language-text\">request_to_speak</code></li>\n<li><code class=\"language-text\">manage_events</code></li>\n<li><code class=\"language-text\">create_events</code></li>\n</ul>\n<h3>Role Permissions</h3>\n<p>Represents permissions for roles.</p>\n<h4>Permissions</h4>\n<ul>\n<li><code class=\"language-text\">create_instant_invite</code></li>\n<li><code class=\"language-text\">manage_channels</code></li>\n<li><code class=\"language-text\">view_channel</code></li>\n<li><code class=\"language-text\">manage_roles</code></li>\n<li><code class=\"language-text\">kick_members</code></li>\n<li><code class=\"language-text\">ban_members</code></li>\n<li><code class=\"language-text\">administrator</code></li>\n<li><code class=\"language-text\">manage_guild</code></li>\n<li><code class=\"language-text\">view_audit_log</code></li>\n<li><code class=\"language-text\">view_guild_insights</code></li>\n<li><code class=\"language-text\">change_nickname</code></li>\n<li><code class=\"language-text\">manage_nicknames</code></li>\n<li><code class=\"language-text\">manage_emojis_and_stickers</code></li>\n<li><code class=\"language-text\">moderate_members</code></li>\n</ul>","fields":{"idName":"permissions","slug":"/07_permissions/"}}},{"node":{"id":"808acc7f-70e0-535d-923f-d0b2a97134f6","frontmatter":{"title":"Message Builder"},"html":"<p>The <code class=\"language-text\">MessageBuilder</code> class is used to describe the contents of a new (or to be updated) message.</p>\n<p>A new message builder can be created with the <code class=\"language-text\">new</code> function:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$builder</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">MessageBuilder</span><span class=\"token operator\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Most builder functions return itself, so you can easily chain function calls together for a clean API,\nan example is shown on the right.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$channel</span><span class=\"token operator\">-></span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">MessageBuilder</span><span class=\"token operator\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">-></span><span class=\"token function\">setContent</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Hello, world!'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">-></span><span class=\"token function\">addEmbed</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$embed</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">-></span><span class=\"token function\">addFile</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/path/to/file'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4>Setting content</h4>\n<p>Sets the text content of the message. Throws an <code class=\"language-text\">LengthException</code> if the content is greater than 2000 characters.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$builder</span><span class=\"token operator\">-></span><span class=\"token function\">setContent</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Hello, world!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4>Setting TTS value</h4>\n<p>Sets the TTS value of the message.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$builder</span><span class=\"token operator\">-></span><span class=\"token function\">setTts</span><span class=\"token punctuation\">(</span><span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4>Adding embeds</h4>\n<p>You can add up to 10 embeds to a message. The embed functions takes <code class=\"language-text\">Embed</code> objects or associative arrays:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$builder</span><span class=\"token operator\">-></span><span class=\"token function\">addEmbed</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$embed</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>You can also set the embeds from another array of embeds. Note this will remove the current embeds from the message.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$embeds</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$builder</span><span class=\"token operator\">-></span><span class=\"token function\">setEmbeds</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$embeds</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4>Replying to a message</h4>\n<p>Sets the message as replying to another message. Takes a <code class=\"language-text\">Message</code> object.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$discord</span><span class=\"token operator\">-></span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Event</span><span class=\"token operator\">::</span><span class=\"token constant\">MESSAGE_CREATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Message</span> <span class=\"token variable\">$message</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">use</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$builder</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$builder</span><span class=\"token operator\">-></span><span class=\"token function\">setReplyTo</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$message</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4>Adding files to the message</h4>\n<p>You can add multiple files to a message. The <code class=\"language-text\">addFile</code> function takes a path to a file, as well as an optional filename.</p>\n<p>If the filename parameter is ommited, it will take the filename from the path. Throws an exception if the path\ndoes not exist.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$builder</span><span class=\"token operator\">-></span><span class=\"token function\">addFile</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/path/to/file'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'file.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>You can also add files to messages with the content as a string:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$builder</span><span class=\"token operator\">-></span><span class=\"token function\">addFileFromContent</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'file.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'contents of my file!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>You can also remove all files from a builder:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$builder</span><span class=\"token operator\">-></span><span class=\"token function\">clearFiles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>There is no limit on the number of files you can upload, but the whole request must be less than 8MB (including headers and JSON payload).</p>\n<h4>Adding sticker</h4>\n<p>You can add up to 3 stickers to a message. The function takes <code class=\"language-text\">Sticker</code> object.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$builder</span><span class=\"token operator\">-></span><span class=\"token function\">addSticker</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sticker</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>To remove a sticker:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$builder</span><span class=\"token operator\">-></span><span class=\"token function\">removeSticker</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sticker</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>You can also set the stickers from another array of stickers. Note this will remove the current stickers from the message.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$stickers</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$builder</span><span class=\"token operator\">-></span><span class=\"token function\">setStickers</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$stickers</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4>Adding message components</h4>\n<p>Adds a message component to the message. You can only add <code class=\"language-text\">ActionRow</code> and <code class=\"language-text\">SelectMenu</code> objects. To add buttons, wrap the button in an <code class=\"language-text\">ActionRow</code> object.\nThrows an <code class=\"language-text\">InvalidArgumentException</code> if the given component is not an <code class=\"language-text\">ActionRow</code> or <code class=\"language-text\">SelectMenu</code>\nThrows an <code class=\"language-text\">OverflowException</code> if you already have 5 components in the message.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$component</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">SelectMenu</span><span class=\"token operator\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$builder</span><span class=\"token operator\">-></span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$component</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","fields":{"idName":"message-builder","slug":"/08_message_builder/"}}},{"node":{"id":"fb99c2fd-d272-5ce9-bca8-2be6954b2075","frontmatter":{"title":"Message Components"},"html":"<p>Message components are new components you can add to messages, such as buttons and select menus.\nThere are currently four different types of message components:</p>\n<h2><code class=\"language-text\">ActionRow</code></h2>\n<p>Represents a row of buttons on a message.\nYou can add up to 5 buttons to the row, which can then be added to the message.\nYou can only add buttons to action rows.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$row</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">ActionRow</span><span class=\"token operator\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">-></span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Button</span><span class=\"token operator\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Button</span><span class=\"token operator\">::</span><span class=\"token constant\">STYLE_SUCCESS</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Functions</h3>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">addComponent($component)</code></td>\n<td>adds a component to action row. must be a button component.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">removeComponent($component)</code></td>\n<td>removes the given component from the action row.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">getComponents(): Component[]</code></td>\n<td>returns all the action row components in an array.</td>\n</tr>\n</tbody>\n</table>\n<h2><code class=\"language-text\">Button</code></h2>\n<p>Represents a button attached to a message.\nYou cannot directly attach a button to a message, it must be contained inside an <code class=\"language-text\">ActionRow</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$button</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">Button</span><span class=\"token operator\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Button</span><span class=\"token operator\">::</span><span class=\"token constant\">STYLE_SUCCESS</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">-></span><span class=\"token function\">setLabel</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'push me!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>There are 5 different button styles:</p>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>constant</th>\n<th>colour</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>primary</td>\n<td><code class=\"language-text\">Button::STYLE_PRIMARY</code></td>\n<td>blurple</td>\n</tr>\n<tr>\n<td>secondary</td>\n<td><code class=\"language-text\">Button::STYLE_SECONDARY</code></td>\n<td>grey</td>\n</tr>\n<tr>\n<td>success</td>\n<td><code class=\"language-text\">Button::STYLE_SUCCESS</code></td>\n<td>green</td>\n</tr>\n<tr>\n<td>danger</td>\n<td><code class=\"language-text\">Button::STYLE_DANGER</code></td>\n<td>red</td>\n</tr>\n<tr>\n<td>link</td>\n<td><code class=\"language-text\">Button::STYLE_LINK</code></td>\n<td>grey</td>\n</tr>\n</tbody>\n</table>\n<p><img src=\"https://discord.com/assets/7bb017ce52cfd6575e21c058feb3883b.png\" alt=\"Discord button styles\"></p>\n<h3>Functions</h3>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">setStyle($style)</code></td>\n<td>sets the style of the button. must be one of the above constants.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">setLabel($label)</code></td>\n<td>sets the label of the button. maximum 80 characters.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">setEmoji($emoji)</code></td>\n<td>sets the emoji for the button. must be an <code class=\"language-text\">Emoji</code> object.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">setCustomId($custom_id)</code></td>\n<td>sets the custom ID of the button. maximum 100 characters. will be automatically generated if left null. not applicable for link buttons.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">setUrl($url)</code></td>\n<td>sets the url of the button. only for buttons with the <code class=\"language-text\">Button::STYLE_LINK</code> style.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">setDisabled($disabled)</code></td>\n<td>sets whether the button is disabled or not.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">setListener($listener, $discord)</code></td>\n<td>sets the listener for the button. see below for more information. not applicable for link buttons.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">removeListener()</code></td>\n<td>removes the listener from the button.</td>\n</tr>\n</tbody>\n</table>\n<h3>Adding a button listener</h3>\n<p>If you add a button you probably want to listen for when it is clicked.\nThis is done through the <code class=\"language-text\">setListener(callable $listener, Discord $discord)</code> function.</p>\n<p>The <code class=\"language-text\">callable $listener</code> will be a function which is called with the <code class=\"language-text\">Interaction</code> object that triggered the button press.\nYou must also pass the function the <code class=\"language-text\">$discord</code> client.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$button</span><span class=\"token operator\">-></span><span class=\"token function\">setListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Interaction</span> <span class=\"token variable\">$interaction</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$interaction</span><span class=\"token operator\">-></span><span class=\"token function\">respondWithMessage</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">MessageBuilder</span><span class=\"token operator\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token operator\">-></span><span class=\"token function\">setContent</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'why\\'d u push me?'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>If the interaction is not responded to after the function is called, the interaction will be automatically acknowledged with\nno response. If you are going to acknowledge the interaction after a delay (e.g. HTTP request, arbitrary timeout) you should\nreturn a promise from the listener to prevent the automatic acknowledgement:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$button</span><span class=\"token operator\">-></span><span class=\"token function\">setListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Interaction</span> <span class=\"token variable\">$interaction</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">use</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">someFunctionWhichWillReturnAPromise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$returnValueFromFunction</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">use</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$interaction</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$interaction</span><span class=\"token operator\">-></span><span class=\"token function\">respondWithMessage</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">MessageBuilder</span><span class=\"token operator\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token operator\">-></span><span class=\"token function\">setContent</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$returnValueFromFunction</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2><code class=\"language-text\">SelectMenu</code></h2>\n<p>Select menus are a dropdown which can be attached to a message. They operate similar to buttons. They do not need to be attached\nto an <code class=\"language-text\">ActionRow</code>. You may have up to 25 <code class=\"language-text\">Option</code>s attached to a select menu.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$select</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">SelectMenu</span><span class=\"token operator\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">-></span><span class=\"token function\">addOption</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Option</span><span class=\"token operator\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'me?'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">-></span><span class=\"token function\">addOption</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Option</span><span class=\"token operator\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'or me?'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Functions</h3>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">addOption($option)</code></td>\n<td>adds an option to the select menu. maximum 25 options per menu. options must have unique values.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">removeOption($option)</code></td>\n<td>removes an option from the select menu.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">setPlaceholder($placeholder)</code></td>\n<td>sets a placeholder string to be displayed when nothing is selected. null to clear. max 150 characters.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">setMinValues($min_values)</code></td>\n<td>the number of values which must be selected to submit the menu. between 0 and 25, default 1.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">setMaxValues($max_values)</code></td>\n<td>the maximum number of values which can be selected. maximum 25, default 1.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">setDisabled($disabled)</code></td>\n<td>sets whether the menu is disabled or not.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">setListener($listener, $discord)</code></td>\n<td>sets the listener for the select menu. see below for more information.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">removeListener()</code></td>\n<td>removes the listener from the select menu.</td>\n</tr>\n</tbody>\n</table>\n<h3><code class=\"language-text\">Option</code> functions</h3>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">new($label, ?$value)</code></td>\n<td>creates a new option. requires a label to display, and optionally an internal value (leave as null to auto-generate one).</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">setDescription($description)</code></td>\n<td>sets the description of the option. null to clear. maximum 100 characters.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">setEmoji($emoji)</code></td>\n<td>sets the emoji of the option. null to clear. must be an emoji object.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">setDefault($default)</code></td>\n<td>sets whether the option is the default option.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">getValue()</code></td>\n<td>gets the internal developer value of the option.</td>\n</tr>\n</tbody>\n</table>\n<h3>Adding a select menu listener</h3>\n<p>Select menu listeners operate similar to the button listeners, so please read the above section first. The callback function will\nbe called with the <code class=\"language-text\">Interaction</code> object as well as a collection of selected <code class=\"language-text\">Option</code>s.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$select</span><span class=\"token operator\">-></span><span class=\"token function\">setListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Interaction</span> <span class=\"token variable\">$interaction</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Collection</span> <span class=\"token variable\">$options</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$options</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$option</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$option</span><span class=\"token operator\">-></span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token constant\">PHP_EOL</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token variable\">$interaction</span><span class=\"token operator\">-></span><span class=\"token function\">respondWithMessage</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">MessageBuilder</span><span class=\"token operator\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">setContent</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'thanks!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$discord</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2><code class=\"language-text\">TextInput</code></h2>\n<p>Text inputs are an interactive component that render on modals.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$textInput</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">TextInput</span><span class=\"token operator\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Label'</span><span class=\"token punctuation\">,</span> <span class=\"token class-name static-context\">TextInput</span><span class=\"token operator\">::</span><span class=\"token constant\">TYPE_SHORT</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'custom id'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">-></span><span class=\"token function\">setRequired</span><span class=\"token punctuation\">(</span><span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>They can be used to collect short-form or long-form text:</p>\n<table>\n<thead>\n<tr>\n<th>style</th>\n<th>constant</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Short (single line)</td>\n<td><code class=\"language-text\">TextInput::STYLE_SHORT</code></td>\n</tr>\n<tr>\n<td>Paragraph (multi line)</td>\n<td><code class=\"language-text\">TextInput::STYLE_PARAGRAPH</code></td>\n</tr>\n</tbody>\n</table>\n<h3>Functions</h3>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">setCustomId($custom_id)</code></td>\n<td>sets the custom ID of the text input. maximum 100 characters. will be automatically generated if left null.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">setStyle($style)</code></td>\n<td>sets the style of the text input. must be one of the above constants.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">setLabel($label)</code></td>\n<td>sets the label of the button. maximum 80 characters.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">setMinLength($min_length)</code></td>\n<td>the minimum length of value. between 0 and 4000, default 0.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">setMaxLength($max_length)</code></td>\n<td>the maximum length of value. between 1 and 4000, default 4000.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">setValue($value)</code></td>\n<td>sets a pre-filled value for the text input. maximum 4000 characters.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">setPlaceholder($placeholder)</code></td>\n<td>sets a placeholder string to be displayed when text input is empty. max 100 characters.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">setRequired($required)</code></td>\n<td>sets whether the text input is required or not.</td>\n</tr>\n</tbody>\n</table>","fields":{"idName":"message-components","slug":"/09_components/"}}},{"node":{"id":"a076aab7-eca2-5db1-81ea-b46b75f7e3ad","frontmatter":{"title":"Interactions"},"html":"<p>Interactions are utilized in message components and slash commands.</p>\n<h3>Attributes</h3>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>string</td>\n<td>id of the interaction.</td>\n</tr>\n<tr>\n<td>application_id</td>\n<td>string</td>\n<td>id of the application associated to the interaction.</td>\n</tr>\n<tr>\n<td>int</td>\n<td>type</td>\n<td>type of interaction.</td>\n</tr>\n<tr>\n<td>data</td>\n<td><code class=\"language-text\">?InteractionData</code></td>\n<td>data associated with the interaction.</td>\n</tr>\n<tr>\n<td>guild</td>\n<td><code class=\"language-text\">?Guild</code></td>\n<td>guild interaction was triggered from, null if DM.</td>\n</tr>\n<tr>\n<td>channel</td>\n<td><code class=\"language-text\">?Channel</code></td>\n<td>channel interaction was triggered from.</td>\n</tr>\n<tr>\n<td>member</td>\n<td><code class=\"language-text\">?Member</code></td>\n<td>member that triggered interaction.</td>\n</tr>\n<tr>\n<td>user</td>\n<td><code class=\"language-text\">User</code></td>\n<td>user that triggered interaction.</td>\n</tr>\n<tr>\n<td>token</td>\n<td>string</td>\n<td>internal token for responding to interaction.</td>\n</tr>\n<tr>\n<td>version</td>\n<td>int</td>\n<td>version of interaction.</td>\n</tr>\n<tr>\n<td>message</td>\n<td><code class=\"language-text\">?Message</code></td>\n<td>message that triggered interaction.</td>\n</tr>\n<tr>\n<td>locale</td>\n<td>?string</td>\n<td>The selected language of the invoking user.</td>\n</tr>\n<tr>\n<td>guild_locale</td>\n<td>?string</td>\n<td>The guild's preferred locale, if invoked in a guild.</td>\n</tr>\n</tbody>\n</table>\n<p>The locale list can be seen on <a href=\"https://discord.com/developers/docs/reference#locales\">Discord API reference</a>.</p>\n<h3>Functions on interaction create</h3>\n<p>The following functions are used to respond an interaction after being created <code class=\"language-text\">Event::INTERACTION_CREATE</code>,\nresponding interaction with wrong type throws a <code class=\"language-text\">LogicException</code></p>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>description</th>\n<th>valid for interaction type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">acknowledgeWithResponse(?bool $ephemeral)</code></td>\n<td>acknowledges the interaction, creating a placeholder response to be updated</td>\n<td><code class=\"language-text\">APPLICATION_COMMAND</code>, <code class=\"language-text\">MESSAGE_COMPONENT</code>, <code class=\"language-text\">MODAL_SUBMIT</code></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">acknowledge()</code></td>\n<td>defer the interaction</td>\n<td><code class=\"language-text\">MESSAGE_COMPONENT</code>, <code class=\"language-text\">MODAL_SUBMIT</code></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">respondWithMessage(MessageBuilder $builder, ?bool $ephemeral)</code></td>\n<td>responds to the interaction with a message. ephemeral is default false</td>\n<td><code class=\"language-text\">APPLICATION_COMMAND</code>, <code class=\"language-text\">MESSAGE_COMPONENT</code>, <code class=\"language-text\">MODAL_SUBMIT</code></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">autoCompleteResult(array $choices)</code></td>\n<td>responds a suggestion to options with auto complete</td>\n<td><code class=\"language-text\">APPLICATION_COMMAND_AUTOCOMPLETE</code></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">showModal(string $title, string $custom_id, array $components, ?callable $submit = null)</code></td>\n<td>responds to the interaction with a popup modal</td>\n<td>other than <code class=\"language-text\">PING</code> and <code class=\"language-text\">MODAL_SUBMIT</code></td>\n</tr>\n</tbody>\n</table>\n<h3>Functions after interaction response</h3>\n<p>The following functions can be only used after interaction respond above,\notherwise throws a <code class=\"language-text\">RuntimeException</code> \"Interaction has not been responded to.\"</p>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>description</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">updateMessage(MessageBuilder $message)</code></td>\n<td>updates the message the interaction was triggered from. only for message component interaction</td>\n<td><code class=\"language-text\">Promise&lt;void></code></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">getOriginalResponse()</code></td>\n<td>gets the original interaction response</td>\n<td><code class=\"language-text\">Promise&lt;Message></code></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">updateOriginalResponse(MessageBuilder $message)</code></td>\n<td>updates the original interaction response</td>\n<td><code class=\"language-text\">Promise&lt;Message></code></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">deleteOriginalResponse()</code></td>\n<td>deletes the original interaction response</td>\n<td><code class=\"language-text\">Promise&lt;void></code></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">sendFollowUpMessage(MessageBuilder $builder, ?bool $ephemeral)</code></td>\n<td>sends a follow up message to the interaction. ephemeral is defalt false</td>\n<td><code class=\"language-text\">Promise&lt;Message></code></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">getFollowUpMessage(string $message_id)</code></td>\n<td>gets a non ephemeral follow up message from the interaction</td>\n<td><code class=\"language-text\">Promise&lt;Message></code></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">updateFollowUpMessage(string $message_id, MessageBuilder $builder)</code></td>\n<td>updates the follow up message of the interaction</td>\n<td><code class=\"language-text\">Promise&lt;Message></code></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">deleteFollowUpMessage(string $message_id)</code></td>\n<td>deletes a follow up message from the interaction</td>\n<td><code class=\"language-text\">Promise&lt;void></code></td>\n</tr>\n</tbody>\n</table>","fields":{"idName":"interactions","slug":"/10_interactions/"}}}]}},"pageContext":{}},"staticQueryHashes":[]}